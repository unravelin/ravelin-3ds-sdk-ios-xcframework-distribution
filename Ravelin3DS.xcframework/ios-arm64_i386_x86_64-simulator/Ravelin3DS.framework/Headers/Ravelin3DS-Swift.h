#if 0
#elif defined(__arm64__) && __arm64__
// Generated by Apple Swift version 5.5.2 effective-4.2 (swiftlang-1300.0.47.5 clang-1300.0.29.30)
#ifndef RAVELIN3DS_SWIFT_H
#define RAVELIN3DS_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import Foundation;
@import ObjectiveC;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="Ravelin3DS",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif


@class NSString;
@protocol SDKChallengeProtocol;
@class NSNumber;

SWIFT_PROTOCOL("_TtP10Ravelin3DS24GenericChallengeProtocol_")
@protocol GenericChallengeProtocol
- (void)clickVerifyButton;
- (NSString * _Nonnull)getChallengeType SWIFT_WARN_UNUSED_RESULT;
- (void)clickCancelButton;
- (void)setChallengeProtocolWithSdkChallengeProtocol:(id <SDKChallengeProtocol> _Nonnull)sdkChallengeProtocol;
/// <p> Callback to notify the SDK to expand all text areas before RefApp takes a screenshot
/// for Visual Test Cases. </p>
/// *
- (void)expandTextsBeforeScreenshot;
/// <p> Callback to select the whitelist checkbox </p>
/// *
- (void)selectWhitelistCheckedWithChecked:(BOOL)checked;
/// <p> Callback to notify the SDK to rotate the screen to lanscape orientation in order to
/// execute the test case. </p>
/// This function should simulate the device rotation changing screen to landscape
/// paramenter true when the test case should be executed in landscape
/// *
- (void)setLandscapeOrientationWithLandscapeOrientation:(BOOL)landscapeOrientation;
@end


SWIFT_PROTOCOL("_TtP10Ravelin3DS28MultiSelectChallengeProtocol_")
@protocol MultiSelectChallengeProtocol <GenericChallengeProtocol>
- (void)selectIndex:(NSInteger)index;
@end


SWIFT_PROTOCOL("_TtP10Ravelin3DS26OutOfBandChallengeProtocol_")
@protocol OutOfBandChallengeProtocol <GenericChallengeProtocol>
@end


/// transaction parameters that the App passes to the 3DS Server when creating the AReq
SWIFT_CLASS_NAMED("R3DS2AuthenticationRequestParameters")
@interface R3DS2AuthenticationRequestParameters : NSObject
- (nullable instancetype)initWithSdkTransactionId:(NSString * _Nonnull)sdkTransactionId deviceData:(NSString * _Nonnull)deviceData sdkEphemeralPublicKey:(NSString * _Nonnull)sdkEphemeralPublicKey sdkAppId:(NSString * _Nonnull)sdkAppId sdkReferenceNumber:(NSString * _Nonnull)sdkReferenceNumber messageVersion:(NSString * _Nonnull)messageVersion error:(NSError * _Nullable * _Nullable)error OBJC_DESIGNATED_INITIALIZER;
/// Returns a string that represents the encrypted device data
///
/// returns:
/// The encrypted device data as a JWE string
- (NSString * _Nonnull)getDeviceData SWIFT_WARN_UNUSED_RESULT;
/// Returns the SDK Transaction ID
///
/// returns:
/// Returns the SDK Transaction ID as a string
- (NSString * _Nonnull)getSDKTransactionId SWIFT_WARN_UNUSED_RESULT;
/// Returns the SDK App ID
///
/// returns:
/// Returns the SDK App ID as a string
- (NSString * _Nonnull)getSDKAppID SWIFT_WARN_UNUSED_RESULT;
/// Returns the SDK Reference Number
///
/// returns:
/// The SDK Reference Number as a string
- (NSString * _Nonnull)getSDKReferenceNumber SWIFT_WARN_UNUSED_RESULT;
/// Returns the SDK Ephemeral Public Key as a String representation of a JWK object
///
/// returns:
/// The public key component of the ephemeral key pair as a String representation of a JWK object
- (NSString * _Nonnull)getSDKEphemeralPublicKey SWIFT_WARN_UNUSED_RESULT;
/// Returns the protocol version that is used for the transaction
///
/// returns:
/// the protocol version as a string
- (NSString * _Nonnull)getMessageVersion SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("R3DS2AuthenticationResponse")
@interface R3DS2AuthenticationResponse : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


/// Provides methods to pass UI customization parameters to the 3DS SDK.
SWIFT_CLASS_NAMED("R3DS2Customization")
@interface R3DS2Customization : NSObject <NSCopying>
- (nonnull instancetype)initWith:(R3DS2Customization * _Nonnull)base;
/// Setter for the text font name
/// \param fontName The name of the font
///
///
/// throws:
/// InvalidInput
- (BOOL)setTextFontNameWithFontName:(NSString * _Nonnull)fontName error:(NSError * _Nullable * _Nullable)error;
/// Setter for the text color
/// \param hexColorCode a hex code representation of the required color as String
///
///
/// throws:
/// InvalidInput
- (BOOL)setTextColorWithHexColorCode:(NSString * _Nonnull)hexColorCode error:(NSError * _Nullable * _Nullable)error;
/// Setter for the dark text color
/// \param hexColorCode a hex code representation of the required color as String
///
///
/// throws:
/// InvalidInput
- (BOOL)setDarkTextColorWithHexColorCode:(NSString * _Nonnull)hexColorCode error:(NSError * _Nullable * _Nullable)error;
/// Setter fot the text font size
/// \param fontSize the font size given as an integer value
///
///
/// throws:
/// InvalidInput
- (BOOL)setTextFontSizeWithFontSize:(NSInteger)fontSize error:(NSError * _Nullable * _Nullable)error;
/// Returns the text font name
///
/// returns:
/// String value of the font name or empty string if non specified
- (NSString * _Nonnull)getTextFontName SWIFT_WARN_UNUSED_RESULT;
/// Returns the text color as a hex code representation of the given color or empty string if non specified
///
/// returns:
/// String of the color in hex code format
- (NSString * _Nonnull)getTextColor SWIFT_WARN_UNUSED_RESULT;
/// Returns the dark text color as a hex code representation of the given color or empty string if none specified
///
/// returns:
/// String of the color in hex code format
- (NSString * _Nonnull)getDarkTextColor SWIFT_WARN_UNUSED_RESULT;
/// Returns the text font size
///
/// returns:
/// Integer value representing the font size or 0 if not set
- (NSInteger)getTextFontSize SWIFT_WARN_UNUSED_RESULT;
- (id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)zone SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// Provide methods for the 3DS Requestor App to pass button customization parameters to the 3DS SDK.
SWIFT_CLASS_NAMED("R3DS2ButtonCustomization")
@interface R3DS2ButtonCustomization : R3DS2Customization
/// Sets the background color of the button.
/// \param hexColorCode Color code in Hex format.
///
///
/// throws:
/// InvalidInput
- (BOOL)setBackgroundColorWithHexColorCode:(NSString * _Nonnull)hexColorCode error:(NSError * _Nullable * _Nullable)error;
/// Set the dark background color of the button.
/// \param hexColorCode Color code in Hex format.
///
///
/// throws:
/// InvalidInput
- (BOOL)setDarkBackgroundColorWithHexColorCode:(NSString * _Nonnull)hexColorCode error:(NSError * _Nullable * _Nullable)error;
/// Sets the radius of the button corners.
/// \param cornerRadius Radius (integer value) for the button corners.
///
///
/// throws:
/// InvalidInput
- (BOOL)setCornerRadiusWithCornerRadius:(NSInteger)cornerRadius error:(NSError * _Nullable * _Nullable)error;
/// Returns the background color of the button.
///
/// returns:
/// background color code (as a string) of the button.
- (NSString * _Nonnull)getBackgroundColor SWIFT_WARN_UNUSED_RESULT;
/// Returns the dark background color of the button.
///
/// returns:
/// dark background color code (as a string) of the button.
- (NSString * _Nonnull)getDarkBackgroundColor SWIFT_WARN_UNUSED_RESULT;
/// Returns the radius of the button corners.
///
/// returns:
/// the radius (as an integer) of the button corners.
- (NSInteger)getCornerRadius SWIFT_WARN_UNUSED_RESULT;
- (id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)zone SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

/// Enum type describing the types of buttons
/// <ul>
///   <li>
///     SUBMIT: Submit button
///   </li>
///   <li>
///     CONTINUE: Continue button
///   </li>
///   <li>
///     NEXT: Next button
///   </li>
///   <li>
///     CANCEL: Cancelation button
///   </li>
///   <li>
///     RESEND: Resend button
///   </li>
/// </ul>
typedef SWIFT_ENUM_NAMED(NSInteger, R3DS2ButtonType, "R3DS2ButtonType", open) {
  R3DS2ButtonTypeSUBMIT = 0,
  R3DS2ButtonTypeCONTINUE = 1,
  R3DS2ButtonTypeNEXT = 2,
  R3DS2ButtonTypeCANCEL = 3,
  R3DS2ButtonTypeRESEND = 4,
};


SWIFT_CLASS_NAMED("R3DS2ChallengeParameters")
@interface R3DS2ChallengeParameters : NSObject
- (nonnull instancetype)initWithAuthenticationResponse:(R3DS2AuthenticationResponse * _Nullable)authResponse;
- (void)set3DSServerTransactionID:(NSString * _Nonnull)threeDSServerTransactionID;
- (void)setAcsTransactionID:(NSString * _Nonnull)acsTransactionID;
- (void)setAcsRefNumber:(NSString * _Nonnull)acsReferenceNumber;
- (void)setAcsSignedContent:(NSString * _Nonnull)acsSignedContent;
- (void)setThreeDSRequestorAppURL:(NSString * _Nonnull)threeDSRequestorAppURL;
- (NSString * _Nonnull)get3DSServerTransactionID SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getAcsTransactionID SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getAcsRefNumber SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getAcsSignedContent SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getThreeDSRequestorAppURL SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class R3DS2CompletionEvent;
@class R3DS2ProtocolErrorEvent;
@class R3DS2RuntimeErrorEvent;

/// Holds methods which correspond to events that can take place during the authentication process.
SWIFT_PROTOCOL_NAMED("R3DS2ChallengeStatusReceiver")
@protocol R3DS2ChallengeStatusReceiver
/// Method called when the challenge process is completed.
/// \param completionEvent Information about completion of the challenge process.
///
- (void)completedWithCompletionEvent:(R3DS2CompletionEvent * _Nonnull)completionEvent;
/// Method called when the Cardholder selects the option to cancel the transaction on the challenge screen.
- (void)cancelled;
/// Method called when the challenge process reaches or exceeds the specified timeout.
- (void)timedout;
/// Method called when the 3DS SDK receives an EMV 3-D Secure protocol-defined error message from the ACS.
/// \param protocolErrorEvent Error code and details.
///
- (void)protocolErrorWithProtocolErrorEvent:(R3DS2ProtocolErrorEvent * _Nonnull)protocolErrorEvent;
/// Method called when the 3DS SDK encounters errors during the challenge process.
/// \param runtimeErrorEvent Error code and details.
///
- (void)runtimeErrorWithRuntimeErrorEvent:(R3DS2RuntimeErrorEvent * _Nonnull)runtimeErrorEvent;
@end

@class UIViewController;

SWIFT_PROTOCOL_NAMED("R3DS2ChallengeView")
@protocol R3DS2ChallengeView
@property (nonatomic, readonly, strong) UIViewController * _Nonnull viewController;
@end


SWIFT_CLASS_NAMED("R3DS2CompletionEvent")
@interface R3DS2CompletionEvent : NSObject
- (nonnull instancetype)init:(NSString * _Nonnull)sdkTransactionID :(NSString * _Nonnull)transactionStatus OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nonnull)getSDKTransactionID SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getTransactionStatus SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


/// Represents additional configuration parameters that can be passed to the 3DS2 SDK during initialization.
SWIFT_CLASS_NAMED("R3DS2ConfigParameters")
@interface R3DS2ConfigParameters : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
/// The addParam method shall add a configuration parameter either to the specified group or to the default group.
/// @param group Group to which the configuration parameter is to be added.
/// @param paramName Name of the configuration parameter.
/// @param paramValue Value of the configuration parameter.
/// @param error InvalidInput This exception shall be thrown if paramName is not provided or if a variable already exists in the dictionary.
- (BOOL)addParamWithGroup:(NSString * _Nullable)group paramName:(NSString * _Nonnull)paramName paramValue:(NSString * _Nonnull)paramValue error:(NSError * _Nullable * _Nullable)error;
@end



/// Error related to errors produced by the SDK, and interaction with it.
/// <ul>
///   <li>
///     InvalidInput: represenst a run-time error that occurs due toan  invalid parameter.
///   </li>
///   <li>
///     SDKAlreadyInitialized: represents an error that is thrown if the 3DS SDK instance has already been initialized.
///   </li>
///   <li>
///     SDKNotInitialized: represents an error that is thrown if the 3DS SDK has not been initialized.
///   </li>
///   <li>
///     SDKRuntime: represents an error that is thrown when an internal error is encountered by the 3DS SDK.
///   </li>
/// </ul>
SWIFT_CLASS_NAMED("R3DS2Error")
@interface R3DS2Error : NSObject
+ (NSError * _Nonnull)InvalidInputWithMessage:(NSString * _Nonnull)message cause:(NSError * _Nullable)cause SWIFT_WARN_UNUSED_RESULT;
+ (NSError * _Nonnull)SDKAlreadyInitializedWithMessage:(NSString * _Nonnull)message cause:(NSError * _Nullable)cause SWIFT_WARN_UNUSED_RESULT;
+ (NSError * _Nonnull)SDKNotInitializedWithMessage:(NSString * _Nonnull)message cause:(NSError * _Nullable)cause SWIFT_WARN_UNUSED_RESULT;
+ (NSError * _Nonnull)SDKRuntimeWithMessage:(NSString * _Nonnull)message errorCode:(NSString * _Nullable)errorCode cause:(NSError * _Nullable)cause SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// Holds an error message that is returned by the ACS to the 3DS SDK or an error message that is
/// generated by the 3DS SDK to be returned to the ACS.
SWIFT_CLASS_NAMED("R3DS2ErrorMessage")
@interface R3DS2ErrorMessage : NSObject
/// Initialization of the ErrorMessage class.
/// \param errorCode The error code.
///
/// \param errorDescription The text describing the error.
///
/// \param errorDetail Additional error details.
///
- (nonnull instancetype)initWithTransactionID:(NSString * _Nonnull)transactionID errorCode:(NSString * _Nonnull)errorCode errorComponent:(NSString * _Nonnull)errorComponent errorDescription:(NSString * _Nonnull)errorDescription errorDetail:(NSString * _Nonnull)errorDetail errorMessageType:(NSString * _Nullable)errorMessageType messageVersionNumber:(NSString * _Nonnull)messageVersionNumber OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nonnull)getTransactionID SWIFT_WARN_UNUSED_RESULT;
/// Returns the error code.
///
/// returns:
/// The error code.
- (NSString * _Nonnull)getErrorCode SWIFT_WARN_UNUSED_RESULT;
/// Returns the component tht identified the error.
///
/// returns:
/// The error component.
- (NSString * _Nonnull)getErrorComponent SWIFT_WARN_UNUSED_RESULT;
/// Returns the error description.
///
/// returns:
/// The error description.
- (NSString * _Nonnull)getErrorDescription SWIFT_WARN_UNUSED_RESULT;
/// Returns the error details.
///
/// returns:
/// The error details.
- (NSString * _Nonnull)getErrorDetail SWIFT_WARN_UNUSED_RESULT;
/// Returns the Message Type that was identified as erroneous.
///
/// returns:
/// The type of the error message.
- (NSString * _Nonnull)getErrorMessageType SWIFT_WARN_UNUSED_RESULT;
/// Returns the protocol version identifier.
///
/// returns:
/// The protocol version identifier.
- (NSString * _Nonnull)getMessageVersionNumber SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


/// Provide methods for the 3DS Requestor App to pass text box customization parameters to the 3DS SDK.
SWIFT_CLASS_NAMED("R3DS2LabelCustomization")
@interface R3DS2LabelCustomization : R3DS2Customization
/// Sets the color of the heading label text.
/// \param hexColorCode Color code in Hex format.
///
///
/// throws:
/// InvalidInput
- (BOOL)setHeadingTextColorWithHexColorCode:(NSString * _Nonnull)hexColorCode error:(NSError * _Nullable * _Nullable)error;
/// Sets the dark color of the heading label text.
/// \param hexColorCode Color code in Hex format.
///
///
/// throws:
/// InvalidInput
- (BOOL)setHeadingDarkTextColorWithHexColorCode:(NSString * _Nonnull)hexColorCode error:(NSError * _Nullable * _Nullable)error;
/// Sets the font type of the heading label text.
/// \param fontName Font type for the heading label text.
///
///
/// throws:
/// InvalidInput
- (BOOL)setHeadingTextFontNameWithFontName:(NSString * _Nonnull)fontName error:(NSError * _Nullable * _Nullable)error;
/// Sets the font size of the heading label text.
/// \param fontSize Font size for the heading label text.
///
///
/// throws:
/// InvalidInput
- (BOOL)setHeadingTextFontSizeWithFontSize:(NSInteger)fontSize error:(NSError * _Nullable * _Nullable)error;
/// Returns the colour of the heading label text.
///
/// returns:
/// The hex color code of the heading label text as a string.
- (NSString * _Nonnull)getHeadingTextColor SWIFT_WARN_UNUSED_RESULT;
/// Returns the dark colour of the heading label text.
///
/// returns:
/// The hex color code of the heading label text as a string.
- (NSString * _Nonnull)getHeadingDarkTextColor SWIFT_WARN_UNUSED_RESULT;
/// Returns the font type of the heading label text.
///
/// returns:
/// The font type of the heading label text as a string.
- (NSString * _Nonnull)getHeadingTextFontName SWIFT_WARN_UNUSED_RESULT;
/// Returns the font size of the heading label text.
///
/// returns:
/// The heading text font size as an integer.
- (NSInteger)getHeadingTextFontSize SWIFT_WARN_UNUSED_RESULT;
- (id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)zone SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// Protocol containing functions for the progress view.
SWIFT_PROTOCOL_NAMED("R3DS2ProgressDialog")
@protocol R3DS2ProgressDialog
/// Start the progress dialog as overlay on top of the screens.
- (void)start;
/// Stops the progress dialog.
- (void)stop;
@end


SWIFT_CLASS_NAMED("R3DS2ProtocolErrorEvent")
@interface R3DS2ProtocolErrorEvent : NSObject
- (nonnull instancetype)init:(NSString * _Nonnull)sdkTransactionID :(R3DS2ErrorMessage * _Nonnull)errorMessage OBJC_DESIGNATED_INITIALIZER;
- (R3DS2ErrorMessage * _Nonnull)getErrorMessage SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getSDKTransactionID SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("R3DS2RuntimeErrorEvent")
@interface R3DS2RuntimeErrorEvent : NSObject
- (nonnull instancetype)init:(NSString * _Nullable)errorCode :(NSString * _Nonnull)errorMessage OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nullable)getErrorCode SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getErrorMessage SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end

@class R3DS2UiCustomization;
@protocol R3DS2Transaction;
@class R3DS2Warning;

/// The main 3DS SDK interface.
/// It provides methods to process transactions.
SWIFT_PROTOCOL_NAMED("R3DS2Service")
@protocol R3DS2Service
/// Initializes the 3DS SDK instance.
/// \param configParameters Configuration information that shall be used during initialization.
///
/// \param locale String that represents the locale for the app’s user interface.
///
/// \param uiCustomization UI configuration information that is used to specify the UI layout and theme. For example, font style and font size.
///
///
/// throws:
/// InvalidInput, SDKAlreadyInitialized, SDKRuntime
- (BOOL)initializeWithConfigParameters:(R3DS2ConfigParameters * _Nonnull)configParameters locale:(NSString * _Nullable)locale uiCustomization:(R3DS2UiCustomization * _Nullable)uiCustomization error:(NSError * _Nullable * _Nullable)error;
/// Initializes the 3DS SDK instance.
/// \param configParameters Configuration information that shall be used during initialization.
///
/// \param locale String that represents the locale for the app’s user interface.
///
/// \param uiCustomization UI configuration information that is used to specify the UI layout and theme. For example, font style and font size.
///
/// \param completion 
///
///
/// throws:
/// InvalidInput, SDKAlreadyInitialized, SDKRuntime
- (BOOL)initializeWithConfigParameters:(R3DS2ConfigParameters * _Nonnull)configParameters locale:(NSString * _Nullable)locale uiCustomization:(R3DS2UiCustomization * _Nullable)uiCustomization error:(NSError * _Nullable * _Nullable)error completion:(void (^ _Nullable)(BOOL))completion;
/// Creates an instance of Transaction through which the 3DS Requestor App gets the data that
/// is required to perform the transaction.
/// \param directoryServerId Registered Application Provider Identifier (RID) that is unique to
/// the Payment System.
///
/// \param messageVersion Protocol version according to which the transaction shall be created.
///
///
/// throws:
/// InvalidInput, SDKNotInitialized, SDKRuntime.
- (id <R3DS2Transaction> _Nullable)createTransactionWithDirectoryServerID:(NSString * _Nonnull)directoryServerID messageVersion:(NSString * _Nullable)messageVersion error:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
/// Returns the warnings produced by the 3DS SDK during initialization.
///
/// throws:
/// SDKNotInitialized.
///
/// returns:
/// Returns an Array of warnings produced by the 3DS SDK during initialization.
- (NSArray<R3DS2Warning *> * _Nullable)getWarningsAndReturnError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
/// Returns the version of the 3DS SDK that is integrated with the 3DS Requestor App.
///
/// throws:
/// SDKNotInitialized, SDKRuntime
///
/// returns:
/// returns (as a string) the version of the 3DS SDK that is integrated with the 3DS
/// Requestor App.
- (NSString * _Nullable)getSDKVersionAndReturnError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
/// Frees up resources that are used by the 3DS Requestor App until it is closed. It shall be called only once during a single 3DS Requestor App session.
///
/// throws:
/// SDKNotInitialized
- (BOOL)cleanupAndReturnError:(NSError * _Nullable * _Nullable)error;
@end

@class NSBundle;

SWIFT_CLASS_NAMED("R3DS2ServiceSDK")
@interface R3DS2ServiceSDK : NSObject <R3DS2Service>
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
/// Creates 3DS SDK object
/// \param bundle The bundle from which the SDK will read resources
///
- (nonnull instancetype)initWithBundle:(NSBundle * _Nonnull)bundle OBJC_DESIGNATED_INITIALIZER;
/// Initializes the 3DS SDK instance.
/// \param configParameters Configuration information that shall be used during initialization.
///
/// \param locale String that represents the locale for the app’s user interface.
///
/// \param uiCustomization UI configuration information that is used to specify the UI layout and theme. For example, font style and font size.
///
/// \param completion 
///
///
/// throws:
/// InvalidInput, SDKAlreadyInitialized, SDKRuntime
- (BOOL)initializeWithConfigParameters:(R3DS2ConfigParameters * _Nonnull)configParameters locale:(NSString * _Nullable)locale uiCustomization:(R3DS2UiCustomization * _Nullable)uiCustomization error:(NSError * _Nullable * _Nullable)error completion:(void (^ _Nullable)(BOOL))completion;
- (BOOL)initializeWithConfigParameters:(R3DS2ConfigParameters * _Nonnull)configParameters locale:(NSString * _Nullable)locale uiCustomization:(R3DS2UiCustomization * _Nullable)uiCustomization error:(NSError * _Nullable * _Nullable)error;
/// The createTransaction method creates an instance of Transaction through which the 3DS Requestor App gets the data that is required to perform the transaction.
/// \param directoryServerId Registered Application Provider Identifier (RID) that is unique to the Payment System.
///
/// \param messageVersion Protocol version according to which the transaction shall be created.
///
///
/// throws:
/// InvalidInput, SDKNotInitialized, SDKRuntime.
- (id <R3DS2Transaction> _Nullable)createTransactionWithDirectoryServerID:(NSString * _Nonnull)directoryServerId messageVersion:(NSString * _Nullable)messageVersion error:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
/// Returns the warnings produced by the 3DS SDK during initialization.
///
/// throws:
/// SDKNotInitialized.
///
/// returns:
/// Returns an Array of warnings produced by the 3DS SDK during initialization.
- (NSArray<R3DS2Warning *> * _Nullable)getWarningsAndReturnError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
/// The getSDKVersion method returns the version of the 3DS SDK that is integrated with the 3DS Requestor App.
///
/// throws:
/// SDKNotInitialized, SDKRuntime
///
/// returns:
/// returns (as a string) the version of the 3DS SDK that is integrated with the 3DS Requestor App.
- (NSString * _Nullable)getSDKVersionAndReturnError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
/// The cleanup method frees up resources that are used by the 3DS SDK.
/// It is called only once during a single 3DS Requestor App session.
///
/// throws:
/// SDKNotInitialized
- (BOOL)cleanupAndReturnError:(NSError * _Nullable * _Nullable)error;
@end

/// Severity enum  defines the severity levels of warnings produced by the 3DS SDK while conducting security checks during initialization.
/// <ul>
///   <li>
///     LOW:  A low-severity warning
///   </li>
///   <li>
///     MEDIUM:  A medium-severity warning
///   </li>
///   <li>
///     HIGH:  A high-severity warning
///   </li>
/// </ul>
typedef SWIFT_ENUM_NAMED(NSInteger, R3DS2Severity, "R3DS2Severity", open) {
  R3DS2SeverityLOW = 0,
  R3DS2SeverityMEDIUM = 1,
  R3DS2SeverityHIGH = 2,
};


/// Class holding the UI details specific for a TextBox
SWIFT_CLASS_NAMED("R3DS2TextBoxCustomization")
@interface R3DS2TextBoxCustomization : R3DS2Customization
/// Sets the width of the text box border.
/// \param borderWidth Width (integer value) of the text box border.
///
///
/// throws:
/// InvalidInput
- (BOOL)setBorderWidthWithBorderWidth:(NSInteger)borderWidth error:(NSError * _Nullable * _Nullable)error;
/// Sets the color of the text box border.
/// \param hexColorCode Color code in Hex format.
///
///
/// throws:
/// InvalidInput
- (BOOL)setBorderColorWithHexColorCode:(NSString * _Nonnull)hexColorCode error:(NSError * _Nullable * _Nullable)error;
/// Sets the dark color of the text box border.
/// \param hexColorCode Color code in Hex format.
///
///
/// throws:
/// InvalidInput
- (BOOL)setDarkBorderColorWithHexColorCode:(NSString * _Nonnull)hexColorCode error:(NSError * _Nullable * _Nullable)error;
/// Sets the corner radius of the text box corners.
/// \param cornerRadius Radius (integer value) for the text box corners.
///
///
/// throws:
/// InvalidInput
- (BOOL)setCornerRadiusWithCornerRadius:(NSInteger)cornerRadius error:(NSError * _Nullable * _Nullable)error;
/// Returns the width of the text box border.
///
/// returns:
/// The width (as an integer) of the text box border.
- (NSInteger)getBorderWidth SWIFT_WARN_UNUSED_RESULT;
/// Returns the color of the text box border in hex colour code.
///
/// returns:
/// the hex color code (as a string) of the text box border.
- (NSString * _Nonnull)getBorderColor SWIFT_WARN_UNUSED_RESULT;
/// Returns the dark color of the text box border in hex colour code.
///
/// returns:
/// the hex color code (as a string) of the text box border.
- (NSString * _Nonnull)getDarkBorderColor SWIFT_WARN_UNUSED_RESULT;
/// Gets the corner radius of the text box corners.
///
/// returns:
/// The radius (as an integer) of the text box corners
- (NSInteger)getCornerRadius SWIFT_WARN_UNUSED_RESULT;
- (id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)zone SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// Provides methods for the 3DS Requestor App to pass toolbar customization parameters to the 3DS SDK.
SWIFT_CLASS_NAMED("R3DS2ToolbarCustomization")
@interface R3DS2ToolbarCustomization : R3DS2Customization
/// Sets the background color for the toolbar.
/// \param hexColorCode Color code in Hex format.
///
///
/// throws:
/// InvalidInput
- (BOOL)setBackgroundColorWithHexColorCode:(NSString * _Nonnull)hexColorCode error:(NSError * _Nullable * _Nullable)error;
/// Sets the dark background color for the toolbar.
/// \param hexColorCode Color code in Hex format.
///
///
/// throws:
/// InvalidInput
- (BOOL)setDarkBackgroundColorWithHexColorCode:(NSString * _Nonnull)hexColorCode error:(NSError * _Nullable * _Nullable)error;
/// Sets the header text of the toolbar.
/// \param headerText Text for the header.
///
///
/// throws:
/// InvalidInput
- (BOOL)setHeaderTextWithHeaderText:(NSString * _Nonnull)headerText error:(NSError * _Nullable * _Nullable)error;
/// Sets the button text of the toolbar.
/// \param buttonText Text for the button. For example, “Cancel”.
///
///
/// throws:
/// InvalidInput
- (BOOL)setButtonTextWithButtonText:(NSString * _Nonnull)buttonText error:(NSError * _Nullable * _Nullable)error;
/// Returns the background colour for the toolbar.
///
/// returns:
/// Background colour code (as a String) for the toolbar.
- (NSString * _Nonnull)getBackgroundColor SWIFT_WARN_UNUSED_RESULT;
/// Returns the dark background colour for the toolbar.
///
/// returns:
/// Background colour code (as a String) for the toolbar.
- (NSString * _Nonnull)getDarkBackgroundColor SWIFT_WARN_UNUSED_RESULT;
/// Returns the header text of the toolbar.
///
/// returns:
/// The header text (as a String) of the toolbar.
- (NSString * _Nonnull)getHeaderText SWIFT_WARN_UNUSED_RESULT;
/// Returns the button text of the toolbar.
///
/// returns:
/// The button text (as a String) of the toolbar.
- (NSString * _Nonnull)getButtonText SWIFT_WARN_UNUSED_RESULT;
- (id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)zone SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class NSData;

/// Holds parameters that are required to create AReq messages and to perform the Challenge Flow
SWIFT_PROTOCOL_NAMED("R3DS2Transaction")
@protocol R3DS2Transaction
/// Returns device and 3DS SDK information to the 3DS Requestor App.
///
/// throws:
/// SDKRuntime exception.
///
/// returns:
/// Returns an AuthenticationRequestParameters object that contains device information and 3DS SDK information.
- (R3DS2AuthenticationRequestParameters * _Nullable)getAuthenticationRequestParametersAndReturnError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
/// Initiates the challenge process.
/// \param challengeParameters ACS details required by the 3DS SDK to conduct the challenge
/// process during the transaction.
///
/// \param challengeStatusReceiver Callback object for notifying the 3DS Requestor App about the
/// challenge status.
///
/// \param timeOut Timeout interval (in minutes) within which the challenge process must be
/// completed. The minimum timeout interval shall be 5 minutes.
///
///
/// throws:
/// Invalid input exception.
- (BOOL)doChallengeWithChallengeParameters:(R3DS2ChallengeParameters * _Nonnull)challengeParameters challengeStatusReceiver:(id <R3DS2ChallengeStatusReceiver> _Nonnull)challengeStatusReceiver timeOut:(NSInteger)timeOut challengeView:(id <R3DS2ChallengeView> _Nonnull)challengeView error:(NSError * _Nullable * _Nullable)error;
/// Returns an instance of Progress View (processing screen) that the 3DS Requestor App uses.
///
/// returns:
/// Returns a ProgressDialog object.
- (id <R3DS2ProgressDialog> _Nullable)getProgressViewAndReturnError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
/// Cleans up resources that are held by the Transaction object.
- (BOOL)closeAndReturnError:(NSError * _Nullable * _Nullable)error;
- (BOOL)presentChallengeData:(NSData * _Nonnull)data challengeStatusReceiver:(id <R3DS2ChallengeStatusReceiver> _Nonnull)challengeStatusReceiver timeOut:(NSInteger)timeOut challengeView:(id <R3DS2ChallengeView> _Nonnull)challengeView error:(NSError * _Nullable * _Nullable)error;
@end


/// Provides the functionality required for 3DS SDK UI customization.
SWIFT_CLASS_NAMED("R3DS2UiCustomization")
@interface R3DS2UiCustomization : NSObject <NSCopying>
/// Sets the attributes of a ButtonCustomization object for a particular button type.
/// \param buttonCustomization A ButtonCustomization object.
///
/// \param buttonType The ButtonType.
///
- (BOOL)setButtonCustomizationWithButtonCustomization:(R3DS2ButtonCustomization * _Nonnull)buttonCustomization buttonType:(enum R3DS2ButtonType)buttonType error:(NSError * _Nullable * _Nullable)error;
/// Sets the attributes of a ButtonCustomization object for an implementer-specific button type.
/// \param buttonCustomization A ButtonCustomization object.
///
/// \param btnType Implementer-specific button type.
///
- (BOOL)setButtonCustomizationWithButtonCustomization:(R3DS2ButtonCustomization * _Nonnull)buttonCustomization btnType:(NSString * _Nonnull)btnType error:(NSError * _Nullable * _Nullable)error;
/// Sets the attributes of a ToolbarCustomization object.
/// \param toolbarCustomization A ToolbarCustomization object.
///
- (void)setToolbarCustomizationWithToolbarCustomization:(R3DS2ToolbarCustomization * _Nonnull)toolbarCustomization;
/// Sets the attributes of a LabelCustomization object.
/// \param labelCustomization A LabelCustomization object.
///
- (void)setLabelCustomizationWithLabelCustomization:(R3DS2LabelCustomization * _Nonnull)labelCustomization;
/// Sets the attributes of a TextBoxCustomization object.
/// \param textBoxCustomization A TextBoxCustomization object.
///
- (void)setTextBoxCustomizationWithTextBoxCustomization:(R3DS2TextBoxCustomization * _Nonnull)textBoxCustomization;
/// Returns a ButtonCustomization object.
/// \param buttonType A pre-defined list of button types.
///
///
/// returns:
/// returns A Button Customization object.
- (R3DS2ButtonCustomization * _Nullable)getButtonCustomizationWithButtonType:(enum R3DS2ButtonType)buttonType SWIFT_WARN_UNUSED_RESULT;
/// Returns a ButtonCustomization object for an implementer-specific button type.
/// \param btnType Implementer-specific button type.
///
///
/// returns:
/// A ButtonCustomization object.
- (R3DS2ButtonCustomization * _Nullable)getButtonCustomizationWithBtnType:(NSString * _Nonnull)btnType SWIFT_WARN_UNUSED_RESULT;
/// Returns a ToolbarCustomization object.
///
/// returns:
/// A ToolbarCustomization object.
- (R3DS2ToolbarCustomization * _Nullable)getToolbarCustomization SWIFT_WARN_UNUSED_RESULT;
/// Returns a LabelCustomization object.
///
/// returns:
/// A LabelCustomization object.
- (R3DS2LabelCustomization * _Nullable)getLabelCustomization SWIFT_WARN_UNUSED_RESULT;
/// Returns a TextBoxCustomization object.
///
/// returns:
/// A TextBoxCustomization object.
- (R3DS2TextBoxCustomization * _Nullable)getTextboxCustomization SWIFT_WARN_UNUSED_RESULT;
/// Method creating a deep copy of the given object.
/// \param zone Nil
///
///
/// returns:
/// Deep copy of the given object.
- (id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)zone SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// Warning represents a warning that is produced by the 3DS SDK while performing security checks during initialization.
SWIFT_CLASS_NAMED("R3DS2Warning")
@interface R3DS2Warning : NSObject
/// Constructs a Warning object.
/// \param warningId Warning ID
///
/// \param message Warning message
///
/// \param severity Warning severity level
///
- (nonnull instancetype)initWithWarningId:(NSString * _Nonnull)warningId message:(NSString * _Nonnull)message severity:(enum R3DS2Severity)severity OBJC_DESIGNATED_INITIALIZER;
/// Return the warning ID
///
/// returns:
/// The warning ID as a string.
- (NSString * _Nonnull)getID SWIFT_WARN_UNUSED_RESULT;
/// Returns the warning message.
///
/// returns:
/// The warning message as a string.
- (NSString * _Nonnull)getMessage SWIFT_WARN_UNUSED_RESULT;
/// Return the severity level of the warning produced by the 3DS SDK.
///
/// returns:
/// The severity level of the warning as a Severity enum type.
- (enum R3DS2Severity)getSeverity SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


SWIFT_PROTOCOL("_TtP10Ravelin3DS20SDKChallengeProtocol_")
@protocol SDKChallengeProtocol
- (void)handleChallenge;
@end


SWIFT_PROTOCOL("_TtP10Ravelin3DS31SingleSelectorChallengeProtocol_")
@protocol SingleSelectorChallengeProtocol <GenericChallengeProtocol>
- (void)selectObject:(NSInteger)index;
@end


SWIFT_PROTOCOL("_TtP10Ravelin3DS21TextChallengeProtocol_")
@protocol TextChallengeProtocol <GenericChallengeProtocol>
- (void)typeTextChallengeValue:(NSString * _Nonnull)value;
@end


















@class WKWebView;

SWIFT_PROTOCOL("_TtP10Ravelin3DS20WebChallengeProtocol_")
@protocol WebChallengeProtocol <GenericChallengeProtocol>
- (WKWebView * _Nonnull)getWebView SWIFT_WARN_UNUSED_RESULT;
@end

#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif

#elif defined(__x86_64__) && __x86_64__
// Generated by Apple Swift version 5.5.2 effective-4.2 (swiftlang-1300.0.47.5 clang-1300.0.29.30)
#ifndef RAVELIN3DS_SWIFT_H
#define RAVELIN3DS_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import Foundation;
@import ObjectiveC;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="Ravelin3DS",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif


@class NSString;
@protocol SDKChallengeProtocol;
@class NSNumber;

SWIFT_PROTOCOL("_TtP10Ravelin3DS24GenericChallengeProtocol_")
@protocol GenericChallengeProtocol
- (void)clickVerifyButton;
- (NSString * _Nonnull)getChallengeType SWIFT_WARN_UNUSED_RESULT;
- (void)clickCancelButton;
- (void)setChallengeProtocolWithSdkChallengeProtocol:(id <SDKChallengeProtocol> _Nonnull)sdkChallengeProtocol;
/// <p> Callback to notify the SDK to expand all text areas before RefApp takes a screenshot
/// for Visual Test Cases. </p>
/// *
- (void)expandTextsBeforeScreenshot;
/// <p> Callback to select the whitelist checkbox </p>
/// *
- (void)selectWhitelistCheckedWithChecked:(BOOL)checked;
/// <p> Callback to notify the SDK to rotate the screen to lanscape orientation in order to
/// execute the test case. </p>
/// This function should simulate the device rotation changing screen to landscape
/// paramenter true when the test case should be executed in landscape
/// *
- (void)setLandscapeOrientationWithLandscapeOrientation:(BOOL)landscapeOrientation;
@end


SWIFT_PROTOCOL("_TtP10Ravelin3DS28MultiSelectChallengeProtocol_")
@protocol MultiSelectChallengeProtocol <GenericChallengeProtocol>
- (void)selectIndex:(NSInteger)index;
@end


SWIFT_PROTOCOL("_TtP10Ravelin3DS26OutOfBandChallengeProtocol_")
@protocol OutOfBandChallengeProtocol <GenericChallengeProtocol>
@end


/// transaction parameters that the App passes to the 3DS Server when creating the AReq
SWIFT_CLASS_NAMED("R3DS2AuthenticationRequestParameters")
@interface R3DS2AuthenticationRequestParameters : NSObject
- (nullable instancetype)initWithSdkTransactionId:(NSString * _Nonnull)sdkTransactionId deviceData:(NSString * _Nonnull)deviceData sdkEphemeralPublicKey:(NSString * _Nonnull)sdkEphemeralPublicKey sdkAppId:(NSString * _Nonnull)sdkAppId sdkReferenceNumber:(NSString * _Nonnull)sdkReferenceNumber messageVersion:(NSString * _Nonnull)messageVersion error:(NSError * _Nullable * _Nullable)error OBJC_DESIGNATED_INITIALIZER;
/// Returns a string that represents the encrypted device data
///
/// returns:
/// The encrypted device data as a JWE string
- (NSString * _Nonnull)getDeviceData SWIFT_WARN_UNUSED_RESULT;
/// Returns the SDK Transaction ID
///
/// returns:
/// Returns the SDK Transaction ID as a string
- (NSString * _Nonnull)getSDKTransactionId SWIFT_WARN_UNUSED_RESULT;
/// Returns the SDK App ID
///
/// returns:
/// Returns the SDK App ID as a string
- (NSString * _Nonnull)getSDKAppID SWIFT_WARN_UNUSED_RESULT;
/// Returns the SDK Reference Number
///
/// returns:
/// The SDK Reference Number as a string
- (NSString * _Nonnull)getSDKReferenceNumber SWIFT_WARN_UNUSED_RESULT;
/// Returns the SDK Ephemeral Public Key as a String representation of a JWK object
///
/// returns:
/// The public key component of the ephemeral key pair as a String representation of a JWK object
- (NSString * _Nonnull)getSDKEphemeralPublicKey SWIFT_WARN_UNUSED_RESULT;
/// Returns the protocol version that is used for the transaction
///
/// returns:
/// the protocol version as a string
- (NSString * _Nonnull)getMessageVersion SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("R3DS2AuthenticationResponse")
@interface R3DS2AuthenticationResponse : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


/// Provides methods to pass UI customization parameters to the 3DS SDK.
SWIFT_CLASS_NAMED("R3DS2Customization")
@interface R3DS2Customization : NSObject <NSCopying>
- (nonnull instancetype)initWith:(R3DS2Customization * _Nonnull)base;
/// Setter for the text font name
/// \param fontName The name of the font
///
///
/// throws:
/// InvalidInput
- (BOOL)setTextFontNameWithFontName:(NSString * _Nonnull)fontName error:(NSError * _Nullable * _Nullable)error;
/// Setter for the text color
/// \param hexColorCode a hex code representation of the required color as String
///
///
/// throws:
/// InvalidInput
- (BOOL)setTextColorWithHexColorCode:(NSString * _Nonnull)hexColorCode error:(NSError * _Nullable * _Nullable)error;
/// Setter for the dark text color
/// \param hexColorCode a hex code representation of the required color as String
///
///
/// throws:
/// InvalidInput
- (BOOL)setDarkTextColorWithHexColorCode:(NSString * _Nonnull)hexColorCode error:(NSError * _Nullable * _Nullable)error;
/// Setter fot the text font size
/// \param fontSize the font size given as an integer value
///
///
/// throws:
/// InvalidInput
- (BOOL)setTextFontSizeWithFontSize:(NSInteger)fontSize error:(NSError * _Nullable * _Nullable)error;
/// Returns the text font name
///
/// returns:
/// String value of the font name or empty string if non specified
- (NSString * _Nonnull)getTextFontName SWIFT_WARN_UNUSED_RESULT;
/// Returns the text color as a hex code representation of the given color or empty string if non specified
///
/// returns:
/// String of the color in hex code format
- (NSString * _Nonnull)getTextColor SWIFT_WARN_UNUSED_RESULT;
/// Returns the dark text color as a hex code representation of the given color or empty string if none specified
///
/// returns:
/// String of the color in hex code format
- (NSString * _Nonnull)getDarkTextColor SWIFT_WARN_UNUSED_RESULT;
/// Returns the text font size
///
/// returns:
/// Integer value representing the font size or 0 if not set
- (NSInteger)getTextFontSize SWIFT_WARN_UNUSED_RESULT;
- (id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)zone SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// Provide methods for the 3DS Requestor App to pass button customization parameters to the 3DS SDK.
SWIFT_CLASS_NAMED("R3DS2ButtonCustomization")
@interface R3DS2ButtonCustomization : R3DS2Customization
/// Sets the background color of the button.
/// \param hexColorCode Color code in Hex format.
///
///
/// throws:
/// InvalidInput
- (BOOL)setBackgroundColorWithHexColorCode:(NSString * _Nonnull)hexColorCode error:(NSError * _Nullable * _Nullable)error;
/// Set the dark background color of the button.
/// \param hexColorCode Color code in Hex format.
///
///
/// throws:
/// InvalidInput
- (BOOL)setDarkBackgroundColorWithHexColorCode:(NSString * _Nonnull)hexColorCode error:(NSError * _Nullable * _Nullable)error;
/// Sets the radius of the button corners.
/// \param cornerRadius Radius (integer value) for the button corners.
///
///
/// throws:
/// InvalidInput
- (BOOL)setCornerRadiusWithCornerRadius:(NSInteger)cornerRadius error:(NSError * _Nullable * _Nullable)error;
/// Returns the background color of the button.
///
/// returns:
/// background color code (as a string) of the button.
- (NSString * _Nonnull)getBackgroundColor SWIFT_WARN_UNUSED_RESULT;
/// Returns the dark background color of the button.
///
/// returns:
/// dark background color code (as a string) of the button.
- (NSString * _Nonnull)getDarkBackgroundColor SWIFT_WARN_UNUSED_RESULT;
/// Returns the radius of the button corners.
///
/// returns:
/// the radius (as an integer) of the button corners.
- (NSInteger)getCornerRadius SWIFT_WARN_UNUSED_RESULT;
- (id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)zone SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

/// Enum type describing the types of buttons
/// <ul>
///   <li>
///     SUBMIT: Submit button
///   </li>
///   <li>
///     CONTINUE: Continue button
///   </li>
///   <li>
///     NEXT: Next button
///   </li>
///   <li>
///     CANCEL: Cancelation button
///   </li>
///   <li>
///     RESEND: Resend button
///   </li>
/// </ul>
typedef SWIFT_ENUM_NAMED(NSInteger, R3DS2ButtonType, "R3DS2ButtonType", open) {
  R3DS2ButtonTypeSUBMIT = 0,
  R3DS2ButtonTypeCONTINUE = 1,
  R3DS2ButtonTypeNEXT = 2,
  R3DS2ButtonTypeCANCEL = 3,
  R3DS2ButtonTypeRESEND = 4,
};


SWIFT_CLASS_NAMED("R3DS2ChallengeParameters")
@interface R3DS2ChallengeParameters : NSObject
- (nonnull instancetype)initWithAuthenticationResponse:(R3DS2AuthenticationResponse * _Nullable)authResponse;
- (void)set3DSServerTransactionID:(NSString * _Nonnull)threeDSServerTransactionID;
- (void)setAcsTransactionID:(NSString * _Nonnull)acsTransactionID;
- (void)setAcsRefNumber:(NSString * _Nonnull)acsReferenceNumber;
- (void)setAcsSignedContent:(NSString * _Nonnull)acsSignedContent;
- (void)setThreeDSRequestorAppURL:(NSString * _Nonnull)threeDSRequestorAppURL;
- (NSString * _Nonnull)get3DSServerTransactionID SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getAcsTransactionID SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getAcsRefNumber SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getAcsSignedContent SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getThreeDSRequestorAppURL SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class R3DS2CompletionEvent;
@class R3DS2ProtocolErrorEvent;
@class R3DS2RuntimeErrorEvent;

/// Holds methods which correspond to events that can take place during the authentication process.
SWIFT_PROTOCOL_NAMED("R3DS2ChallengeStatusReceiver")
@protocol R3DS2ChallengeStatusReceiver
/// Method called when the challenge process is completed.
/// \param completionEvent Information about completion of the challenge process.
///
- (void)completedWithCompletionEvent:(R3DS2CompletionEvent * _Nonnull)completionEvent;
/// Method called when the Cardholder selects the option to cancel the transaction on the challenge screen.
- (void)cancelled;
/// Method called when the challenge process reaches or exceeds the specified timeout.
- (void)timedout;
/// Method called when the 3DS SDK receives an EMV 3-D Secure protocol-defined error message from the ACS.
/// \param protocolErrorEvent Error code and details.
///
- (void)protocolErrorWithProtocolErrorEvent:(R3DS2ProtocolErrorEvent * _Nonnull)protocolErrorEvent;
/// Method called when the 3DS SDK encounters errors during the challenge process.
/// \param runtimeErrorEvent Error code and details.
///
- (void)runtimeErrorWithRuntimeErrorEvent:(R3DS2RuntimeErrorEvent * _Nonnull)runtimeErrorEvent;
@end

@class UIViewController;

SWIFT_PROTOCOL_NAMED("R3DS2ChallengeView")
@protocol R3DS2ChallengeView
@property (nonatomic, readonly, strong) UIViewController * _Nonnull viewController;
@end


SWIFT_CLASS_NAMED("R3DS2CompletionEvent")
@interface R3DS2CompletionEvent : NSObject
- (nonnull instancetype)init:(NSString * _Nonnull)sdkTransactionID :(NSString * _Nonnull)transactionStatus OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nonnull)getSDKTransactionID SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getTransactionStatus SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


/// Represents additional configuration parameters that can be passed to the 3DS2 SDK during initialization.
SWIFT_CLASS_NAMED("R3DS2ConfigParameters")
@interface R3DS2ConfigParameters : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
/// The addParam method shall add a configuration parameter either to the specified group or to the default group.
/// @param group Group to which the configuration parameter is to be added.
/// @param paramName Name of the configuration parameter.
/// @param paramValue Value of the configuration parameter.
/// @param error InvalidInput This exception shall be thrown if paramName is not provided or if a variable already exists in the dictionary.
- (BOOL)addParamWithGroup:(NSString * _Nullable)group paramName:(NSString * _Nonnull)paramName paramValue:(NSString * _Nonnull)paramValue error:(NSError * _Nullable * _Nullable)error;
@end



/// Error related to errors produced by the SDK, and interaction with it.
/// <ul>
///   <li>
///     InvalidInput: represenst a run-time error that occurs due toan  invalid parameter.
///   </li>
///   <li>
///     SDKAlreadyInitialized: represents an error that is thrown if the 3DS SDK instance has already been initialized.
///   </li>
///   <li>
///     SDKNotInitialized: represents an error that is thrown if the 3DS SDK has not been initialized.
///   </li>
///   <li>
///     SDKRuntime: represents an error that is thrown when an internal error is encountered by the 3DS SDK.
///   </li>
/// </ul>
SWIFT_CLASS_NAMED("R3DS2Error")
@interface R3DS2Error : NSObject
+ (NSError * _Nonnull)InvalidInputWithMessage:(NSString * _Nonnull)message cause:(NSError * _Nullable)cause SWIFT_WARN_UNUSED_RESULT;
+ (NSError * _Nonnull)SDKAlreadyInitializedWithMessage:(NSString * _Nonnull)message cause:(NSError * _Nullable)cause SWIFT_WARN_UNUSED_RESULT;
+ (NSError * _Nonnull)SDKNotInitializedWithMessage:(NSString * _Nonnull)message cause:(NSError * _Nullable)cause SWIFT_WARN_UNUSED_RESULT;
+ (NSError * _Nonnull)SDKRuntimeWithMessage:(NSString * _Nonnull)message errorCode:(NSString * _Nullable)errorCode cause:(NSError * _Nullable)cause SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// Holds an error message that is returned by the ACS to the 3DS SDK or an error message that is
/// generated by the 3DS SDK to be returned to the ACS.
SWIFT_CLASS_NAMED("R3DS2ErrorMessage")
@interface R3DS2ErrorMessage : NSObject
/// Initialization of the ErrorMessage class.
/// \param errorCode The error code.
///
/// \param errorDescription The text describing the error.
///
/// \param errorDetail Additional error details.
///
- (nonnull instancetype)initWithTransactionID:(NSString * _Nonnull)transactionID errorCode:(NSString * _Nonnull)errorCode errorComponent:(NSString * _Nonnull)errorComponent errorDescription:(NSString * _Nonnull)errorDescription errorDetail:(NSString * _Nonnull)errorDetail errorMessageType:(NSString * _Nullable)errorMessageType messageVersionNumber:(NSString * _Nonnull)messageVersionNumber OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nonnull)getTransactionID SWIFT_WARN_UNUSED_RESULT;
/// Returns the error code.
///
/// returns:
/// The error code.
- (NSString * _Nonnull)getErrorCode SWIFT_WARN_UNUSED_RESULT;
/// Returns the component tht identified the error.
///
/// returns:
/// The error component.
- (NSString * _Nonnull)getErrorComponent SWIFT_WARN_UNUSED_RESULT;
/// Returns the error description.
///
/// returns:
/// The error description.
- (NSString * _Nonnull)getErrorDescription SWIFT_WARN_UNUSED_RESULT;
/// Returns the error details.
///
/// returns:
/// The error details.
- (NSString * _Nonnull)getErrorDetail SWIFT_WARN_UNUSED_RESULT;
/// Returns the Message Type that was identified as erroneous.
///
/// returns:
/// The type of the error message.
- (NSString * _Nonnull)getErrorMessageType SWIFT_WARN_UNUSED_RESULT;
/// Returns the protocol version identifier.
///
/// returns:
/// The protocol version identifier.
- (NSString * _Nonnull)getMessageVersionNumber SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


/// Provide methods for the 3DS Requestor App to pass text box customization parameters to the 3DS SDK.
SWIFT_CLASS_NAMED("R3DS2LabelCustomization")
@interface R3DS2LabelCustomization : R3DS2Customization
/// Sets the color of the heading label text.
/// \param hexColorCode Color code in Hex format.
///
///
/// throws:
/// InvalidInput
- (BOOL)setHeadingTextColorWithHexColorCode:(NSString * _Nonnull)hexColorCode error:(NSError * _Nullable * _Nullable)error;
/// Sets the dark color of the heading label text.
/// \param hexColorCode Color code in Hex format.
///
///
/// throws:
/// InvalidInput
- (BOOL)setHeadingDarkTextColorWithHexColorCode:(NSString * _Nonnull)hexColorCode error:(NSError * _Nullable * _Nullable)error;
/// Sets the font type of the heading label text.
/// \param fontName Font type for the heading label text.
///
///
/// throws:
/// InvalidInput
- (BOOL)setHeadingTextFontNameWithFontName:(NSString * _Nonnull)fontName error:(NSError * _Nullable * _Nullable)error;
/// Sets the font size of the heading label text.
/// \param fontSize Font size for the heading label text.
///
///
/// throws:
/// InvalidInput
- (BOOL)setHeadingTextFontSizeWithFontSize:(NSInteger)fontSize error:(NSError * _Nullable * _Nullable)error;
/// Returns the colour of the heading label text.
///
/// returns:
/// The hex color code of the heading label text as a string.
- (NSString * _Nonnull)getHeadingTextColor SWIFT_WARN_UNUSED_RESULT;
/// Returns the dark colour of the heading label text.
///
/// returns:
/// The hex color code of the heading label text as a string.
- (NSString * _Nonnull)getHeadingDarkTextColor SWIFT_WARN_UNUSED_RESULT;
/// Returns the font type of the heading label text.
///
/// returns:
/// The font type of the heading label text as a string.
- (NSString * _Nonnull)getHeadingTextFontName SWIFT_WARN_UNUSED_RESULT;
/// Returns the font size of the heading label text.
///
/// returns:
/// The heading text font size as an integer.
- (NSInteger)getHeadingTextFontSize SWIFT_WARN_UNUSED_RESULT;
- (id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)zone SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// Protocol containing functions for the progress view.
SWIFT_PROTOCOL_NAMED("R3DS2ProgressDialog")
@protocol R3DS2ProgressDialog
/// Start the progress dialog as overlay on top of the screens.
- (void)start;
/// Stops the progress dialog.
- (void)stop;
@end


SWIFT_CLASS_NAMED("R3DS2ProtocolErrorEvent")
@interface R3DS2ProtocolErrorEvent : NSObject
- (nonnull instancetype)init:(NSString * _Nonnull)sdkTransactionID :(R3DS2ErrorMessage * _Nonnull)errorMessage OBJC_DESIGNATED_INITIALIZER;
- (R3DS2ErrorMessage * _Nonnull)getErrorMessage SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getSDKTransactionID SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("R3DS2RuntimeErrorEvent")
@interface R3DS2RuntimeErrorEvent : NSObject
- (nonnull instancetype)init:(NSString * _Nullable)errorCode :(NSString * _Nonnull)errorMessage OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nullable)getErrorCode SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getErrorMessage SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end

@class R3DS2UiCustomization;
@protocol R3DS2Transaction;
@class R3DS2Warning;

/// The main 3DS SDK interface.
/// It provides methods to process transactions.
SWIFT_PROTOCOL_NAMED("R3DS2Service")
@protocol R3DS2Service
/// Initializes the 3DS SDK instance.
/// \param configParameters Configuration information that shall be used during initialization.
///
/// \param locale String that represents the locale for the app’s user interface.
///
/// \param uiCustomization UI configuration information that is used to specify the UI layout and theme. For example, font style and font size.
///
///
/// throws:
/// InvalidInput, SDKAlreadyInitialized, SDKRuntime
- (BOOL)initializeWithConfigParameters:(R3DS2ConfigParameters * _Nonnull)configParameters locale:(NSString * _Nullable)locale uiCustomization:(R3DS2UiCustomization * _Nullable)uiCustomization error:(NSError * _Nullable * _Nullable)error;
/// Initializes the 3DS SDK instance.
/// \param configParameters Configuration information that shall be used during initialization.
///
/// \param locale String that represents the locale for the app’s user interface.
///
/// \param uiCustomization UI configuration information that is used to specify the UI layout and theme. For example, font style and font size.
///
/// \param completion 
///
///
/// throws:
/// InvalidInput, SDKAlreadyInitialized, SDKRuntime
- (BOOL)initializeWithConfigParameters:(R3DS2ConfigParameters * _Nonnull)configParameters locale:(NSString * _Nullable)locale uiCustomization:(R3DS2UiCustomization * _Nullable)uiCustomization error:(NSError * _Nullable * _Nullable)error completion:(void (^ _Nullable)(BOOL))completion;
/// Creates an instance of Transaction through which the 3DS Requestor App gets the data that
/// is required to perform the transaction.
/// \param directoryServerId Registered Application Provider Identifier (RID) that is unique to
/// the Payment System.
///
/// \param messageVersion Protocol version according to which the transaction shall be created.
///
///
/// throws:
/// InvalidInput, SDKNotInitialized, SDKRuntime.
- (id <R3DS2Transaction> _Nullable)createTransactionWithDirectoryServerID:(NSString * _Nonnull)directoryServerID messageVersion:(NSString * _Nullable)messageVersion error:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
/// Returns the warnings produced by the 3DS SDK during initialization.
///
/// throws:
/// SDKNotInitialized.
///
/// returns:
/// Returns an Array of warnings produced by the 3DS SDK during initialization.
- (NSArray<R3DS2Warning *> * _Nullable)getWarningsAndReturnError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
/// Returns the version of the 3DS SDK that is integrated with the 3DS Requestor App.
///
/// throws:
/// SDKNotInitialized, SDKRuntime
///
/// returns:
/// returns (as a string) the version of the 3DS SDK that is integrated with the 3DS
/// Requestor App.
- (NSString * _Nullable)getSDKVersionAndReturnError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
/// Frees up resources that are used by the 3DS Requestor App until it is closed. It shall be called only once during a single 3DS Requestor App session.
///
/// throws:
/// SDKNotInitialized
- (BOOL)cleanupAndReturnError:(NSError * _Nullable * _Nullable)error;
@end

@class NSBundle;

SWIFT_CLASS_NAMED("R3DS2ServiceSDK")
@interface R3DS2ServiceSDK : NSObject <R3DS2Service>
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
/// Creates 3DS SDK object
/// \param bundle The bundle from which the SDK will read resources
///
- (nonnull instancetype)initWithBundle:(NSBundle * _Nonnull)bundle OBJC_DESIGNATED_INITIALIZER;
/// Initializes the 3DS SDK instance.
/// \param configParameters Configuration information that shall be used during initialization.
///
/// \param locale String that represents the locale for the app’s user interface.
///
/// \param uiCustomization UI configuration information that is used to specify the UI layout and theme. For example, font style and font size.
///
/// \param completion 
///
///
/// throws:
/// InvalidInput, SDKAlreadyInitialized, SDKRuntime
- (BOOL)initializeWithConfigParameters:(R3DS2ConfigParameters * _Nonnull)configParameters locale:(NSString * _Nullable)locale uiCustomization:(R3DS2UiCustomization * _Nullable)uiCustomization error:(NSError * _Nullable * _Nullable)error completion:(void (^ _Nullable)(BOOL))completion;
- (BOOL)initializeWithConfigParameters:(R3DS2ConfigParameters * _Nonnull)configParameters locale:(NSString * _Nullable)locale uiCustomization:(R3DS2UiCustomization * _Nullable)uiCustomization error:(NSError * _Nullable * _Nullable)error;
/// The createTransaction method creates an instance of Transaction through which the 3DS Requestor App gets the data that is required to perform the transaction.
/// \param directoryServerId Registered Application Provider Identifier (RID) that is unique to the Payment System.
///
/// \param messageVersion Protocol version according to which the transaction shall be created.
///
///
/// throws:
/// InvalidInput, SDKNotInitialized, SDKRuntime.
- (id <R3DS2Transaction> _Nullable)createTransactionWithDirectoryServerID:(NSString * _Nonnull)directoryServerId messageVersion:(NSString * _Nullable)messageVersion error:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
/// Returns the warnings produced by the 3DS SDK during initialization.
///
/// throws:
/// SDKNotInitialized.
///
/// returns:
/// Returns an Array of warnings produced by the 3DS SDK during initialization.
- (NSArray<R3DS2Warning *> * _Nullable)getWarningsAndReturnError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
/// The getSDKVersion method returns the version of the 3DS SDK that is integrated with the 3DS Requestor App.
///
/// throws:
/// SDKNotInitialized, SDKRuntime
///
/// returns:
/// returns (as a string) the version of the 3DS SDK that is integrated with the 3DS Requestor App.
- (NSString * _Nullable)getSDKVersionAndReturnError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
/// The cleanup method frees up resources that are used by the 3DS SDK.
/// It is called only once during a single 3DS Requestor App session.
///
/// throws:
/// SDKNotInitialized
- (BOOL)cleanupAndReturnError:(NSError * _Nullable * _Nullable)error;
@end

/// Severity enum  defines the severity levels of warnings produced by the 3DS SDK while conducting security checks during initialization.
/// <ul>
///   <li>
///     LOW:  A low-severity warning
///   </li>
///   <li>
///     MEDIUM:  A medium-severity warning
///   </li>
///   <li>
///     HIGH:  A high-severity warning
///   </li>
/// </ul>
typedef SWIFT_ENUM_NAMED(NSInteger, R3DS2Severity, "R3DS2Severity", open) {
  R3DS2SeverityLOW = 0,
  R3DS2SeverityMEDIUM = 1,
  R3DS2SeverityHIGH = 2,
};


/// Class holding the UI details specific for a TextBox
SWIFT_CLASS_NAMED("R3DS2TextBoxCustomization")
@interface R3DS2TextBoxCustomization : R3DS2Customization
/// Sets the width of the text box border.
/// \param borderWidth Width (integer value) of the text box border.
///
///
/// throws:
/// InvalidInput
- (BOOL)setBorderWidthWithBorderWidth:(NSInteger)borderWidth error:(NSError * _Nullable * _Nullable)error;
/// Sets the color of the text box border.
/// \param hexColorCode Color code in Hex format.
///
///
/// throws:
/// InvalidInput
- (BOOL)setBorderColorWithHexColorCode:(NSString * _Nonnull)hexColorCode error:(NSError * _Nullable * _Nullable)error;
/// Sets the dark color of the text box border.
/// \param hexColorCode Color code in Hex format.
///
///
/// throws:
/// InvalidInput
- (BOOL)setDarkBorderColorWithHexColorCode:(NSString * _Nonnull)hexColorCode error:(NSError * _Nullable * _Nullable)error;
/// Sets the corner radius of the text box corners.
/// \param cornerRadius Radius (integer value) for the text box corners.
///
///
/// throws:
/// InvalidInput
- (BOOL)setCornerRadiusWithCornerRadius:(NSInteger)cornerRadius error:(NSError * _Nullable * _Nullable)error;
/// Returns the width of the text box border.
///
/// returns:
/// The width (as an integer) of the text box border.
- (NSInteger)getBorderWidth SWIFT_WARN_UNUSED_RESULT;
/// Returns the color of the text box border in hex colour code.
///
/// returns:
/// the hex color code (as a string) of the text box border.
- (NSString * _Nonnull)getBorderColor SWIFT_WARN_UNUSED_RESULT;
/// Returns the dark color of the text box border in hex colour code.
///
/// returns:
/// the hex color code (as a string) of the text box border.
- (NSString * _Nonnull)getDarkBorderColor SWIFT_WARN_UNUSED_RESULT;
/// Gets the corner radius of the text box corners.
///
/// returns:
/// The radius (as an integer) of the text box corners
- (NSInteger)getCornerRadius SWIFT_WARN_UNUSED_RESULT;
- (id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)zone SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// Provides methods for the 3DS Requestor App to pass toolbar customization parameters to the 3DS SDK.
SWIFT_CLASS_NAMED("R3DS2ToolbarCustomization")
@interface R3DS2ToolbarCustomization : R3DS2Customization
/// Sets the background color for the toolbar.
/// \param hexColorCode Color code in Hex format.
///
///
/// throws:
/// InvalidInput
- (BOOL)setBackgroundColorWithHexColorCode:(NSString * _Nonnull)hexColorCode error:(NSError * _Nullable * _Nullable)error;
/// Sets the dark background color for the toolbar.
/// \param hexColorCode Color code in Hex format.
///
///
/// throws:
/// InvalidInput
- (BOOL)setDarkBackgroundColorWithHexColorCode:(NSString * _Nonnull)hexColorCode error:(NSError * _Nullable * _Nullable)error;
/// Sets the header text of the toolbar.
/// \param headerText Text for the header.
///
///
/// throws:
/// InvalidInput
- (BOOL)setHeaderTextWithHeaderText:(NSString * _Nonnull)headerText error:(NSError * _Nullable * _Nullable)error;
/// Sets the button text of the toolbar.
/// \param buttonText Text for the button. For example, “Cancel”.
///
///
/// throws:
/// InvalidInput
- (BOOL)setButtonTextWithButtonText:(NSString * _Nonnull)buttonText error:(NSError * _Nullable * _Nullable)error;
/// Returns the background colour for the toolbar.
///
/// returns:
/// Background colour code (as a String) for the toolbar.
- (NSString * _Nonnull)getBackgroundColor SWIFT_WARN_UNUSED_RESULT;
/// Returns the dark background colour for the toolbar.
///
/// returns:
/// Background colour code (as a String) for the toolbar.
- (NSString * _Nonnull)getDarkBackgroundColor SWIFT_WARN_UNUSED_RESULT;
/// Returns the header text of the toolbar.
///
/// returns:
/// The header text (as a String) of the toolbar.
- (NSString * _Nonnull)getHeaderText SWIFT_WARN_UNUSED_RESULT;
/// Returns the button text of the toolbar.
///
/// returns:
/// The button text (as a String) of the toolbar.
- (NSString * _Nonnull)getButtonText SWIFT_WARN_UNUSED_RESULT;
- (id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)zone SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class NSData;

/// Holds parameters that are required to create AReq messages and to perform the Challenge Flow
SWIFT_PROTOCOL_NAMED("R3DS2Transaction")
@protocol R3DS2Transaction
/// Returns device and 3DS SDK information to the 3DS Requestor App.
///
/// throws:
/// SDKRuntime exception.
///
/// returns:
/// Returns an AuthenticationRequestParameters object that contains device information and 3DS SDK information.
- (R3DS2AuthenticationRequestParameters * _Nullable)getAuthenticationRequestParametersAndReturnError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
/// Initiates the challenge process.
/// \param challengeParameters ACS details required by the 3DS SDK to conduct the challenge
/// process during the transaction.
///
/// \param challengeStatusReceiver Callback object for notifying the 3DS Requestor App about the
/// challenge status.
///
/// \param timeOut Timeout interval (in minutes) within which the challenge process must be
/// completed. The minimum timeout interval shall be 5 minutes.
///
///
/// throws:
/// Invalid input exception.
- (BOOL)doChallengeWithChallengeParameters:(R3DS2ChallengeParameters * _Nonnull)challengeParameters challengeStatusReceiver:(id <R3DS2ChallengeStatusReceiver> _Nonnull)challengeStatusReceiver timeOut:(NSInteger)timeOut challengeView:(id <R3DS2ChallengeView> _Nonnull)challengeView error:(NSError * _Nullable * _Nullable)error;
/// Returns an instance of Progress View (processing screen) that the 3DS Requestor App uses.
///
/// returns:
/// Returns a ProgressDialog object.
- (id <R3DS2ProgressDialog> _Nullable)getProgressViewAndReturnError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
/// Cleans up resources that are held by the Transaction object.
- (BOOL)closeAndReturnError:(NSError * _Nullable * _Nullable)error;
- (BOOL)presentChallengeData:(NSData * _Nonnull)data challengeStatusReceiver:(id <R3DS2ChallengeStatusReceiver> _Nonnull)challengeStatusReceiver timeOut:(NSInteger)timeOut challengeView:(id <R3DS2ChallengeView> _Nonnull)challengeView error:(NSError * _Nullable * _Nullable)error;
@end


/// Provides the functionality required for 3DS SDK UI customization.
SWIFT_CLASS_NAMED("R3DS2UiCustomization")
@interface R3DS2UiCustomization : NSObject <NSCopying>
/// Sets the attributes of a ButtonCustomization object for a particular button type.
/// \param buttonCustomization A ButtonCustomization object.
///
/// \param buttonType The ButtonType.
///
- (BOOL)setButtonCustomizationWithButtonCustomization:(R3DS2ButtonCustomization * _Nonnull)buttonCustomization buttonType:(enum R3DS2ButtonType)buttonType error:(NSError * _Nullable * _Nullable)error;
/// Sets the attributes of a ButtonCustomization object for an implementer-specific button type.
/// \param buttonCustomization A ButtonCustomization object.
///
/// \param btnType Implementer-specific button type.
///
- (BOOL)setButtonCustomizationWithButtonCustomization:(R3DS2ButtonCustomization * _Nonnull)buttonCustomization btnType:(NSString * _Nonnull)btnType error:(NSError * _Nullable * _Nullable)error;
/// Sets the attributes of a ToolbarCustomization object.
/// \param toolbarCustomization A ToolbarCustomization object.
///
- (void)setToolbarCustomizationWithToolbarCustomization:(R3DS2ToolbarCustomization * _Nonnull)toolbarCustomization;
/// Sets the attributes of a LabelCustomization object.
/// \param labelCustomization A LabelCustomization object.
///
- (void)setLabelCustomizationWithLabelCustomization:(R3DS2LabelCustomization * _Nonnull)labelCustomization;
/// Sets the attributes of a TextBoxCustomization object.
/// \param textBoxCustomization A TextBoxCustomization object.
///
- (void)setTextBoxCustomizationWithTextBoxCustomization:(R3DS2TextBoxCustomization * _Nonnull)textBoxCustomization;
/// Returns a ButtonCustomization object.
/// \param buttonType A pre-defined list of button types.
///
///
/// returns:
/// returns A Button Customization object.
- (R3DS2ButtonCustomization * _Nullable)getButtonCustomizationWithButtonType:(enum R3DS2ButtonType)buttonType SWIFT_WARN_UNUSED_RESULT;
/// Returns a ButtonCustomization object for an implementer-specific button type.
/// \param btnType Implementer-specific button type.
///
///
/// returns:
/// A ButtonCustomization object.
- (R3DS2ButtonCustomization * _Nullable)getButtonCustomizationWithBtnType:(NSString * _Nonnull)btnType SWIFT_WARN_UNUSED_RESULT;
/// Returns a ToolbarCustomization object.
///
/// returns:
/// A ToolbarCustomization object.
- (R3DS2ToolbarCustomization * _Nullable)getToolbarCustomization SWIFT_WARN_UNUSED_RESULT;
/// Returns a LabelCustomization object.
///
/// returns:
/// A LabelCustomization object.
- (R3DS2LabelCustomization * _Nullable)getLabelCustomization SWIFT_WARN_UNUSED_RESULT;
/// Returns a TextBoxCustomization object.
///
/// returns:
/// A TextBoxCustomization object.
- (R3DS2TextBoxCustomization * _Nullable)getTextboxCustomization SWIFT_WARN_UNUSED_RESULT;
/// Method creating a deep copy of the given object.
/// \param zone Nil
///
///
/// returns:
/// Deep copy of the given object.
- (id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)zone SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// Warning represents a warning that is produced by the 3DS SDK while performing security checks during initialization.
SWIFT_CLASS_NAMED("R3DS2Warning")
@interface R3DS2Warning : NSObject
/// Constructs a Warning object.
/// \param warningId Warning ID
///
/// \param message Warning message
///
/// \param severity Warning severity level
///
- (nonnull instancetype)initWithWarningId:(NSString * _Nonnull)warningId message:(NSString * _Nonnull)message severity:(enum R3DS2Severity)severity OBJC_DESIGNATED_INITIALIZER;
/// Return the warning ID
///
/// returns:
/// The warning ID as a string.
- (NSString * _Nonnull)getID SWIFT_WARN_UNUSED_RESULT;
/// Returns the warning message.
///
/// returns:
/// The warning message as a string.
- (NSString * _Nonnull)getMessage SWIFT_WARN_UNUSED_RESULT;
/// Return the severity level of the warning produced by the 3DS SDK.
///
/// returns:
/// The severity level of the warning as a Severity enum type.
- (enum R3DS2Severity)getSeverity SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


SWIFT_PROTOCOL("_TtP10Ravelin3DS20SDKChallengeProtocol_")
@protocol SDKChallengeProtocol
- (void)handleChallenge;
@end


SWIFT_PROTOCOL("_TtP10Ravelin3DS31SingleSelectorChallengeProtocol_")
@protocol SingleSelectorChallengeProtocol <GenericChallengeProtocol>
- (void)selectObject:(NSInteger)index;
@end


SWIFT_PROTOCOL("_TtP10Ravelin3DS21TextChallengeProtocol_")
@protocol TextChallengeProtocol <GenericChallengeProtocol>
- (void)typeTextChallengeValue:(NSString * _Nonnull)value;
@end


















@class WKWebView;

SWIFT_PROTOCOL("_TtP10Ravelin3DS20WebChallengeProtocol_")
@protocol WebChallengeProtocol <GenericChallengeProtocol>
- (WKWebView * _Nonnull)getWebView SWIFT_WARN_UNUSED_RESULT;
@end

#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif

#elif defined(__i386__) && __i386__
// Generated by Apple Swift version 5.5.2 effective-4.2 (swiftlang-1300.0.47.5 clang-1300.0.29.30)
#ifndef RAVELIN3DS_SWIFT_H
#define RAVELIN3DS_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import Foundation;
@import ObjectiveC;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="Ravelin3DS",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif


@class NSString;
@protocol SDKChallengeProtocol;
@class NSNumber;

SWIFT_PROTOCOL("_TtP10Ravelin3DS24GenericChallengeProtocol_")
@protocol GenericChallengeProtocol
- (void)clickVerifyButton;
- (NSString * _Nonnull)getChallengeType SWIFT_WARN_UNUSED_RESULT;
- (void)clickCancelButton;
- (void)setChallengeProtocolWithSdkChallengeProtocol:(id <SDKChallengeProtocol> _Nonnull)sdkChallengeProtocol;
/// <p> Callback to notify the SDK to expand all text areas before RefApp takes a screenshot
/// for Visual Test Cases. </p>
/// *
- (void)expandTextsBeforeScreenshot;
/// <p> Callback to select the whitelist checkbox </p>
/// *
- (void)selectWhitelistCheckedWithChecked:(BOOL)checked;
/// <p> Callback to notify the SDK to rotate the screen to lanscape orientation in order to
/// execute the test case. </p>
/// This function should simulate the device rotation changing screen to landscape
/// paramenter true when the test case should be executed in landscape
/// *
- (void)setLandscapeOrientationWithLandscapeOrientation:(BOOL)landscapeOrientation;
@end


SWIFT_PROTOCOL("_TtP10Ravelin3DS28MultiSelectChallengeProtocol_")
@protocol MultiSelectChallengeProtocol <GenericChallengeProtocol>
- (void)selectIndex:(NSInteger)index;
@end


SWIFT_PROTOCOL("_TtP10Ravelin3DS26OutOfBandChallengeProtocol_")
@protocol OutOfBandChallengeProtocol <GenericChallengeProtocol>
@end


/// transaction parameters that the App passes to the 3DS Server when creating the AReq
SWIFT_CLASS_NAMED("R3DS2AuthenticationRequestParameters")
@interface R3DS2AuthenticationRequestParameters : NSObject
- (nullable instancetype)initWithSdkTransactionId:(NSString * _Nonnull)sdkTransactionId deviceData:(NSString * _Nonnull)deviceData sdkEphemeralPublicKey:(NSString * _Nonnull)sdkEphemeralPublicKey sdkAppId:(NSString * _Nonnull)sdkAppId sdkReferenceNumber:(NSString * _Nonnull)sdkReferenceNumber messageVersion:(NSString * _Nonnull)messageVersion error:(NSError * _Nullable * _Nullable)error OBJC_DESIGNATED_INITIALIZER;
/// Returns a string that represents the encrypted device data
///
/// returns:
/// The encrypted device data as a JWE string
- (NSString * _Nonnull)getDeviceData SWIFT_WARN_UNUSED_RESULT;
/// Returns the SDK Transaction ID
///
/// returns:
/// Returns the SDK Transaction ID as a string
- (NSString * _Nonnull)getSDKTransactionId SWIFT_WARN_UNUSED_RESULT;
/// Returns the SDK App ID
///
/// returns:
/// Returns the SDK App ID as a string
- (NSString * _Nonnull)getSDKAppID SWIFT_WARN_UNUSED_RESULT;
/// Returns the SDK Reference Number
///
/// returns:
/// The SDK Reference Number as a string
- (NSString * _Nonnull)getSDKReferenceNumber SWIFT_WARN_UNUSED_RESULT;
/// Returns the SDK Ephemeral Public Key as a String representation of a JWK object
///
/// returns:
/// The public key component of the ephemeral key pair as a String representation of a JWK object
- (NSString * _Nonnull)getSDKEphemeralPublicKey SWIFT_WARN_UNUSED_RESULT;
/// Returns the protocol version that is used for the transaction
///
/// returns:
/// the protocol version as a string
- (NSString * _Nonnull)getMessageVersion SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("R3DS2AuthenticationResponse")
@interface R3DS2AuthenticationResponse : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


/// Provides methods to pass UI customization parameters to the 3DS SDK.
SWIFT_CLASS_NAMED("R3DS2Customization")
@interface R3DS2Customization : NSObject <NSCopying>
- (nonnull instancetype)initWith:(R3DS2Customization * _Nonnull)base;
/// Setter for the text font name
/// \param fontName The name of the font
///
///
/// throws:
/// InvalidInput
- (BOOL)setTextFontNameWithFontName:(NSString * _Nonnull)fontName error:(NSError * _Nullable * _Nullable)error;
/// Setter for the text color
/// \param hexColorCode a hex code representation of the required color as String
///
///
/// throws:
/// InvalidInput
- (BOOL)setTextColorWithHexColorCode:(NSString * _Nonnull)hexColorCode error:(NSError * _Nullable * _Nullable)error;
/// Setter for the dark text color
/// \param hexColorCode a hex code representation of the required color as String
///
///
/// throws:
/// InvalidInput
- (BOOL)setDarkTextColorWithHexColorCode:(NSString * _Nonnull)hexColorCode error:(NSError * _Nullable * _Nullable)error;
/// Setter fot the text font size
/// \param fontSize the font size given as an integer value
///
///
/// throws:
/// InvalidInput
- (BOOL)setTextFontSizeWithFontSize:(NSInteger)fontSize error:(NSError * _Nullable * _Nullable)error;
/// Returns the text font name
///
/// returns:
/// String value of the font name or empty string if non specified
- (NSString * _Nonnull)getTextFontName SWIFT_WARN_UNUSED_RESULT;
/// Returns the text color as a hex code representation of the given color or empty string if non specified
///
/// returns:
/// String of the color in hex code format
- (NSString * _Nonnull)getTextColor SWIFT_WARN_UNUSED_RESULT;
/// Returns the dark text color as a hex code representation of the given color or empty string if none specified
///
/// returns:
/// String of the color in hex code format
- (NSString * _Nonnull)getDarkTextColor SWIFT_WARN_UNUSED_RESULT;
/// Returns the text font size
///
/// returns:
/// Integer value representing the font size or 0 if not set
- (NSInteger)getTextFontSize SWIFT_WARN_UNUSED_RESULT;
- (id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)zone SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// Provide methods for the 3DS Requestor App to pass button customization parameters to the 3DS SDK.
SWIFT_CLASS_NAMED("R3DS2ButtonCustomization")
@interface R3DS2ButtonCustomization : R3DS2Customization
/// Sets the background color of the button.
/// \param hexColorCode Color code in Hex format.
///
///
/// throws:
/// InvalidInput
- (BOOL)setBackgroundColorWithHexColorCode:(NSString * _Nonnull)hexColorCode error:(NSError * _Nullable * _Nullable)error;
/// Set the dark background color of the button.
/// \param hexColorCode Color code in Hex format.
///
///
/// throws:
/// InvalidInput
- (BOOL)setDarkBackgroundColorWithHexColorCode:(NSString * _Nonnull)hexColorCode error:(NSError * _Nullable * _Nullable)error;
/// Sets the radius of the button corners.
/// \param cornerRadius Radius (integer value) for the button corners.
///
///
/// throws:
/// InvalidInput
- (BOOL)setCornerRadiusWithCornerRadius:(NSInteger)cornerRadius error:(NSError * _Nullable * _Nullable)error;
/// Returns the background color of the button.
///
/// returns:
/// background color code (as a string) of the button.
- (NSString * _Nonnull)getBackgroundColor SWIFT_WARN_UNUSED_RESULT;
/// Returns the dark background color of the button.
///
/// returns:
/// dark background color code (as a string) of the button.
- (NSString * _Nonnull)getDarkBackgroundColor SWIFT_WARN_UNUSED_RESULT;
/// Returns the radius of the button corners.
///
/// returns:
/// the radius (as an integer) of the button corners.
- (NSInteger)getCornerRadius SWIFT_WARN_UNUSED_RESULT;
- (id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)zone SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

/// Enum type describing the types of buttons
/// <ul>
///   <li>
///     SUBMIT: Submit button
///   </li>
///   <li>
///     CONTINUE: Continue button
///   </li>
///   <li>
///     NEXT: Next button
///   </li>
///   <li>
///     CANCEL: Cancelation button
///   </li>
///   <li>
///     RESEND: Resend button
///   </li>
/// </ul>
typedef SWIFT_ENUM_NAMED(NSInteger, R3DS2ButtonType, "R3DS2ButtonType", open) {
  R3DS2ButtonTypeSUBMIT = 0,
  R3DS2ButtonTypeCONTINUE = 1,
  R3DS2ButtonTypeNEXT = 2,
  R3DS2ButtonTypeCANCEL = 3,
  R3DS2ButtonTypeRESEND = 4,
};


SWIFT_CLASS_NAMED("R3DS2ChallengeParameters")
@interface R3DS2ChallengeParameters : NSObject
- (nonnull instancetype)initWithAuthenticationResponse:(R3DS2AuthenticationResponse * _Nullable)authResponse;
- (void)set3DSServerTransactionID:(NSString * _Nonnull)threeDSServerTransactionID;
- (void)setAcsTransactionID:(NSString * _Nonnull)acsTransactionID;
- (void)setAcsRefNumber:(NSString * _Nonnull)acsReferenceNumber;
- (void)setAcsSignedContent:(NSString * _Nonnull)acsSignedContent;
- (void)setThreeDSRequestorAppURL:(NSString * _Nonnull)threeDSRequestorAppURL;
- (NSString * _Nonnull)get3DSServerTransactionID SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getAcsTransactionID SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getAcsRefNumber SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getAcsSignedContent SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getThreeDSRequestorAppURL SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class R3DS2CompletionEvent;
@class R3DS2ProtocolErrorEvent;
@class R3DS2RuntimeErrorEvent;

/// Holds methods which correspond to events that can take place during the authentication process.
SWIFT_PROTOCOL_NAMED("R3DS2ChallengeStatusReceiver")
@protocol R3DS2ChallengeStatusReceiver
/// Method called when the challenge process is completed.
/// \param completionEvent Information about completion of the challenge process.
///
- (void)completedWithCompletionEvent:(R3DS2CompletionEvent * _Nonnull)completionEvent;
/// Method called when the Cardholder selects the option to cancel the transaction on the challenge screen.
- (void)cancelled;
/// Method called when the challenge process reaches or exceeds the specified timeout.
- (void)timedout;
/// Method called when the 3DS SDK receives an EMV 3-D Secure protocol-defined error message from the ACS.
/// \param protocolErrorEvent Error code and details.
///
- (void)protocolErrorWithProtocolErrorEvent:(R3DS2ProtocolErrorEvent * _Nonnull)protocolErrorEvent;
/// Method called when the 3DS SDK encounters errors during the challenge process.
/// \param runtimeErrorEvent Error code and details.
///
- (void)runtimeErrorWithRuntimeErrorEvent:(R3DS2RuntimeErrorEvent * _Nonnull)runtimeErrorEvent;
@end

@class UIViewController;

SWIFT_PROTOCOL_NAMED("R3DS2ChallengeView")
@protocol R3DS2ChallengeView
@property (nonatomic, readonly, strong) UIViewController * _Nonnull viewController;
@end


SWIFT_CLASS_NAMED("R3DS2CompletionEvent")
@interface R3DS2CompletionEvent : NSObject
- (nonnull instancetype)init:(NSString * _Nonnull)sdkTransactionID :(NSString * _Nonnull)transactionStatus OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nonnull)getSDKTransactionID SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getTransactionStatus SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


/// Represents additional configuration parameters that can be passed to the 3DS2 SDK during initialization.
SWIFT_CLASS_NAMED("R3DS2ConfigParameters")
@interface R3DS2ConfigParameters : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
/// The addParam method shall add a configuration parameter either to the specified group or to the default group.
/// @param group Group to which the configuration parameter is to be added.
/// @param paramName Name of the configuration parameter.
/// @param paramValue Value of the configuration parameter.
/// @param error InvalidInput This exception shall be thrown if paramName is not provided or if a variable already exists in the dictionary.
- (BOOL)addParamWithGroup:(NSString * _Nullable)group paramName:(NSString * _Nonnull)paramName paramValue:(NSString * _Nonnull)paramValue error:(NSError * _Nullable * _Nullable)error;
@end



/// Error related to errors produced by the SDK, and interaction with it.
/// <ul>
///   <li>
///     InvalidInput: represenst a run-time error that occurs due toan  invalid parameter.
///   </li>
///   <li>
///     SDKAlreadyInitialized: represents an error that is thrown if the 3DS SDK instance has already been initialized.
///   </li>
///   <li>
///     SDKNotInitialized: represents an error that is thrown if the 3DS SDK has not been initialized.
///   </li>
///   <li>
///     SDKRuntime: represents an error that is thrown when an internal error is encountered by the 3DS SDK.
///   </li>
/// </ul>
SWIFT_CLASS_NAMED("R3DS2Error")
@interface R3DS2Error : NSObject
+ (NSError * _Nonnull)InvalidInputWithMessage:(NSString * _Nonnull)message cause:(NSError * _Nullable)cause SWIFT_WARN_UNUSED_RESULT;
+ (NSError * _Nonnull)SDKAlreadyInitializedWithMessage:(NSString * _Nonnull)message cause:(NSError * _Nullable)cause SWIFT_WARN_UNUSED_RESULT;
+ (NSError * _Nonnull)SDKNotInitializedWithMessage:(NSString * _Nonnull)message cause:(NSError * _Nullable)cause SWIFT_WARN_UNUSED_RESULT;
+ (NSError * _Nonnull)SDKRuntimeWithMessage:(NSString * _Nonnull)message errorCode:(NSString * _Nullable)errorCode cause:(NSError * _Nullable)cause SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// Holds an error message that is returned by the ACS to the 3DS SDK or an error message that is
/// generated by the 3DS SDK to be returned to the ACS.
SWIFT_CLASS_NAMED("R3DS2ErrorMessage")
@interface R3DS2ErrorMessage : NSObject
/// Initialization of the ErrorMessage class.
/// \param errorCode The error code.
///
/// \param errorDescription The text describing the error.
///
/// \param errorDetail Additional error details.
///
- (nonnull instancetype)initWithTransactionID:(NSString * _Nonnull)transactionID errorCode:(NSString * _Nonnull)errorCode errorComponent:(NSString * _Nonnull)errorComponent errorDescription:(NSString * _Nonnull)errorDescription errorDetail:(NSString * _Nonnull)errorDetail errorMessageType:(NSString * _Nullable)errorMessageType messageVersionNumber:(NSString * _Nonnull)messageVersionNumber OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nonnull)getTransactionID SWIFT_WARN_UNUSED_RESULT;
/// Returns the error code.
///
/// returns:
/// The error code.
- (NSString * _Nonnull)getErrorCode SWIFT_WARN_UNUSED_RESULT;
/// Returns the component tht identified the error.
///
/// returns:
/// The error component.
- (NSString * _Nonnull)getErrorComponent SWIFT_WARN_UNUSED_RESULT;
/// Returns the error description.
///
/// returns:
/// The error description.
- (NSString * _Nonnull)getErrorDescription SWIFT_WARN_UNUSED_RESULT;
/// Returns the error details.
///
/// returns:
/// The error details.
- (NSString * _Nonnull)getErrorDetail SWIFT_WARN_UNUSED_RESULT;
/// Returns the Message Type that was identified as erroneous.
///
/// returns:
/// The type of the error message.
- (NSString * _Nonnull)getErrorMessageType SWIFT_WARN_UNUSED_RESULT;
/// Returns the protocol version identifier.
///
/// returns:
/// The protocol version identifier.
- (NSString * _Nonnull)getMessageVersionNumber SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


/// Provide methods for the 3DS Requestor App to pass text box customization parameters to the 3DS SDK.
SWIFT_CLASS_NAMED("R3DS2LabelCustomization")
@interface R3DS2LabelCustomization : R3DS2Customization
/// Sets the color of the heading label text.
/// \param hexColorCode Color code in Hex format.
///
///
/// throws:
/// InvalidInput
- (BOOL)setHeadingTextColorWithHexColorCode:(NSString * _Nonnull)hexColorCode error:(NSError * _Nullable * _Nullable)error;
/// Sets the dark color of the heading label text.
/// \param hexColorCode Color code in Hex format.
///
///
/// throws:
/// InvalidInput
- (BOOL)setHeadingDarkTextColorWithHexColorCode:(NSString * _Nonnull)hexColorCode error:(NSError * _Nullable * _Nullable)error;
/// Sets the font type of the heading label text.
/// \param fontName Font type for the heading label text.
///
///
/// throws:
/// InvalidInput
- (BOOL)setHeadingTextFontNameWithFontName:(NSString * _Nonnull)fontName error:(NSError * _Nullable * _Nullable)error;
/// Sets the font size of the heading label text.
/// \param fontSize Font size for the heading label text.
///
///
/// throws:
/// InvalidInput
- (BOOL)setHeadingTextFontSizeWithFontSize:(NSInteger)fontSize error:(NSError * _Nullable * _Nullable)error;
/// Returns the colour of the heading label text.
///
/// returns:
/// The hex color code of the heading label text as a string.
- (NSString * _Nonnull)getHeadingTextColor SWIFT_WARN_UNUSED_RESULT;
/// Returns the dark colour of the heading label text.
///
/// returns:
/// The hex color code of the heading label text as a string.
- (NSString * _Nonnull)getHeadingDarkTextColor SWIFT_WARN_UNUSED_RESULT;
/// Returns the font type of the heading label text.
///
/// returns:
/// The font type of the heading label text as a string.
- (NSString * _Nonnull)getHeadingTextFontName SWIFT_WARN_UNUSED_RESULT;
/// Returns the font size of the heading label text.
///
/// returns:
/// The heading text font size as an integer.
- (NSInteger)getHeadingTextFontSize SWIFT_WARN_UNUSED_RESULT;
- (id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)zone SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// Protocol containing functions for the progress view.
SWIFT_PROTOCOL_NAMED("R3DS2ProgressDialog")
@protocol R3DS2ProgressDialog
/// Start the progress dialog as overlay on top of the screens.
- (void)start;
/// Stops the progress dialog.
- (void)stop;
@end


SWIFT_CLASS_NAMED("R3DS2ProtocolErrorEvent")
@interface R3DS2ProtocolErrorEvent : NSObject
- (nonnull instancetype)init:(NSString * _Nonnull)sdkTransactionID :(R3DS2ErrorMessage * _Nonnull)errorMessage OBJC_DESIGNATED_INITIALIZER;
- (R3DS2ErrorMessage * _Nonnull)getErrorMessage SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getSDKTransactionID SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("R3DS2RuntimeErrorEvent")
@interface R3DS2RuntimeErrorEvent : NSObject
- (nonnull instancetype)init:(NSString * _Nullable)errorCode :(NSString * _Nonnull)errorMessage OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nullable)getErrorCode SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getErrorMessage SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end

@class R3DS2UiCustomization;
@protocol R3DS2Transaction;
@class R3DS2Warning;

/// The main 3DS SDK interface.
/// It provides methods to process transactions.
SWIFT_PROTOCOL_NAMED("R3DS2Service")
@protocol R3DS2Service
/// Initializes the 3DS SDK instance.
/// \param configParameters Configuration information that shall be used during initialization.
///
/// \param locale String that represents the locale for the app’s user interface.
///
/// \param uiCustomization UI configuration information that is used to specify the UI layout and theme. For example, font style and font size.
///
///
/// throws:
/// InvalidInput, SDKAlreadyInitialized, SDKRuntime
- (BOOL)initializeWithConfigParameters:(R3DS2ConfigParameters * _Nonnull)configParameters locale:(NSString * _Nullable)locale uiCustomization:(R3DS2UiCustomization * _Nullable)uiCustomization error:(NSError * _Nullable * _Nullable)error;
/// Initializes the 3DS SDK instance.
/// \param configParameters Configuration information that shall be used during initialization.
///
/// \param locale String that represents the locale for the app’s user interface.
///
/// \param uiCustomization UI configuration information that is used to specify the UI layout and theme. For example, font style and font size.
///
/// \param completion 
///
///
/// throws:
/// InvalidInput, SDKAlreadyInitialized, SDKRuntime
- (BOOL)initializeWithConfigParameters:(R3DS2ConfigParameters * _Nonnull)configParameters locale:(NSString * _Nullable)locale uiCustomization:(R3DS2UiCustomization * _Nullable)uiCustomization error:(NSError * _Nullable * _Nullable)error completion:(void (^ _Nullable)(BOOL))completion;
/// Creates an instance of Transaction through which the 3DS Requestor App gets the data that
/// is required to perform the transaction.
/// \param directoryServerId Registered Application Provider Identifier (RID) that is unique to
/// the Payment System.
///
/// \param messageVersion Protocol version according to which the transaction shall be created.
///
///
/// throws:
/// InvalidInput, SDKNotInitialized, SDKRuntime.
- (id <R3DS2Transaction> _Nullable)createTransactionWithDirectoryServerID:(NSString * _Nonnull)directoryServerID messageVersion:(NSString * _Nullable)messageVersion error:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
/// Returns the warnings produced by the 3DS SDK during initialization.
///
/// throws:
/// SDKNotInitialized.
///
/// returns:
/// Returns an Array of warnings produced by the 3DS SDK during initialization.
- (NSArray<R3DS2Warning *> * _Nullable)getWarningsAndReturnError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
/// Returns the version of the 3DS SDK that is integrated with the 3DS Requestor App.
///
/// throws:
/// SDKNotInitialized, SDKRuntime
///
/// returns:
/// returns (as a string) the version of the 3DS SDK that is integrated with the 3DS
/// Requestor App.
- (NSString * _Nullable)getSDKVersionAndReturnError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
/// Frees up resources that are used by the 3DS Requestor App until it is closed. It shall be called only once during a single 3DS Requestor App session.
///
/// throws:
/// SDKNotInitialized
- (BOOL)cleanupAndReturnError:(NSError * _Nullable * _Nullable)error;
@end

@class NSBundle;

SWIFT_CLASS_NAMED("R3DS2ServiceSDK")
@interface R3DS2ServiceSDK : NSObject <R3DS2Service>
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
/// Creates 3DS SDK object
/// \param bundle The bundle from which the SDK will read resources
///
- (nonnull instancetype)initWithBundle:(NSBundle * _Nonnull)bundle OBJC_DESIGNATED_INITIALIZER;
/// Initializes the 3DS SDK instance.
/// \param configParameters Configuration information that shall be used during initialization.
///
/// \param locale String that represents the locale for the app’s user interface.
///
/// \param uiCustomization UI configuration information that is used to specify the UI layout and theme. For example, font style and font size.
///
/// \param completion 
///
///
/// throws:
/// InvalidInput, SDKAlreadyInitialized, SDKRuntime
- (BOOL)initializeWithConfigParameters:(R3DS2ConfigParameters * _Nonnull)configParameters locale:(NSString * _Nullable)locale uiCustomization:(R3DS2UiCustomization * _Nullable)uiCustomization error:(NSError * _Nullable * _Nullable)error completion:(void (^ _Nullable)(BOOL))completion;
- (BOOL)initializeWithConfigParameters:(R3DS2ConfigParameters * _Nonnull)configParameters locale:(NSString * _Nullable)locale uiCustomization:(R3DS2UiCustomization * _Nullable)uiCustomization error:(NSError * _Nullable * _Nullable)error;
/// The createTransaction method creates an instance of Transaction through which the 3DS Requestor App gets the data that is required to perform the transaction.
/// \param directoryServerId Registered Application Provider Identifier (RID) that is unique to the Payment System.
///
/// \param messageVersion Protocol version according to which the transaction shall be created.
///
///
/// throws:
/// InvalidInput, SDKNotInitialized, SDKRuntime.
- (id <R3DS2Transaction> _Nullable)createTransactionWithDirectoryServerID:(NSString * _Nonnull)directoryServerId messageVersion:(NSString * _Nullable)messageVersion error:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
/// Returns the warnings produced by the 3DS SDK during initialization.
///
/// throws:
/// SDKNotInitialized.
///
/// returns:
/// Returns an Array of warnings produced by the 3DS SDK during initialization.
- (NSArray<R3DS2Warning *> * _Nullable)getWarningsAndReturnError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
/// The getSDKVersion method returns the version of the 3DS SDK that is integrated with the 3DS Requestor App.
///
/// throws:
/// SDKNotInitialized, SDKRuntime
///
/// returns:
/// returns (as a string) the version of the 3DS SDK that is integrated with the 3DS Requestor App.
- (NSString * _Nullable)getSDKVersionAndReturnError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
/// The cleanup method frees up resources that are used by the 3DS SDK.
/// It is called only once during a single 3DS Requestor App session.
///
/// throws:
/// SDKNotInitialized
- (BOOL)cleanupAndReturnError:(NSError * _Nullable * _Nullable)error;
@end

/// Severity enum  defines the severity levels of warnings produced by the 3DS SDK while conducting security checks during initialization.
/// <ul>
///   <li>
///     LOW:  A low-severity warning
///   </li>
///   <li>
///     MEDIUM:  A medium-severity warning
///   </li>
///   <li>
///     HIGH:  A high-severity warning
///   </li>
/// </ul>
typedef SWIFT_ENUM_NAMED(NSInteger, R3DS2Severity, "R3DS2Severity", open) {
  R3DS2SeverityLOW = 0,
  R3DS2SeverityMEDIUM = 1,
  R3DS2SeverityHIGH = 2,
};


/// Class holding the UI details specific for a TextBox
SWIFT_CLASS_NAMED("R3DS2TextBoxCustomization")
@interface R3DS2TextBoxCustomization : R3DS2Customization
/// Sets the width of the text box border.
/// \param borderWidth Width (integer value) of the text box border.
///
///
/// throws:
/// InvalidInput
- (BOOL)setBorderWidthWithBorderWidth:(NSInteger)borderWidth error:(NSError * _Nullable * _Nullable)error;
/// Sets the color of the text box border.
/// \param hexColorCode Color code in Hex format.
///
///
/// throws:
/// InvalidInput
- (BOOL)setBorderColorWithHexColorCode:(NSString * _Nonnull)hexColorCode error:(NSError * _Nullable * _Nullable)error;
/// Sets the dark color of the text box border.
/// \param hexColorCode Color code in Hex format.
///
///
/// throws:
/// InvalidInput
- (BOOL)setDarkBorderColorWithHexColorCode:(NSString * _Nonnull)hexColorCode error:(NSError * _Nullable * _Nullable)error;
/// Sets the corner radius of the text box corners.
/// \param cornerRadius Radius (integer value) for the text box corners.
///
///
/// throws:
/// InvalidInput
- (BOOL)setCornerRadiusWithCornerRadius:(NSInteger)cornerRadius error:(NSError * _Nullable * _Nullable)error;
/// Returns the width of the text box border.
///
/// returns:
/// The width (as an integer) of the text box border.
- (NSInteger)getBorderWidth SWIFT_WARN_UNUSED_RESULT;
/// Returns the color of the text box border in hex colour code.
///
/// returns:
/// the hex color code (as a string) of the text box border.
- (NSString * _Nonnull)getBorderColor SWIFT_WARN_UNUSED_RESULT;
/// Returns the dark color of the text box border in hex colour code.
///
/// returns:
/// the hex color code (as a string) of the text box border.
- (NSString * _Nonnull)getDarkBorderColor SWIFT_WARN_UNUSED_RESULT;
/// Gets the corner radius of the text box corners.
///
/// returns:
/// The radius (as an integer) of the text box corners
- (NSInteger)getCornerRadius SWIFT_WARN_UNUSED_RESULT;
- (id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)zone SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// Provides methods for the 3DS Requestor App to pass toolbar customization parameters to the 3DS SDK.
SWIFT_CLASS_NAMED("R3DS2ToolbarCustomization")
@interface R3DS2ToolbarCustomization : R3DS2Customization
/// Sets the background color for the toolbar.
/// \param hexColorCode Color code in Hex format.
///
///
/// throws:
/// InvalidInput
- (BOOL)setBackgroundColorWithHexColorCode:(NSString * _Nonnull)hexColorCode error:(NSError * _Nullable * _Nullable)error;
/// Sets the dark background color for the toolbar.
/// \param hexColorCode Color code in Hex format.
///
///
/// throws:
/// InvalidInput
- (BOOL)setDarkBackgroundColorWithHexColorCode:(NSString * _Nonnull)hexColorCode error:(NSError * _Nullable * _Nullable)error;
/// Sets the header text of the toolbar.
/// \param headerText Text for the header.
///
///
/// throws:
/// InvalidInput
- (BOOL)setHeaderTextWithHeaderText:(NSString * _Nonnull)headerText error:(NSError * _Nullable * _Nullable)error;
/// Sets the button text of the toolbar.
/// \param buttonText Text for the button. For example, “Cancel”.
///
///
/// throws:
/// InvalidInput
- (BOOL)setButtonTextWithButtonText:(NSString * _Nonnull)buttonText error:(NSError * _Nullable * _Nullable)error;
/// Returns the background colour for the toolbar.
///
/// returns:
/// Background colour code (as a String) for the toolbar.
- (NSString * _Nonnull)getBackgroundColor SWIFT_WARN_UNUSED_RESULT;
/// Returns the dark background colour for the toolbar.
///
/// returns:
/// Background colour code (as a String) for the toolbar.
- (NSString * _Nonnull)getDarkBackgroundColor SWIFT_WARN_UNUSED_RESULT;
/// Returns the header text of the toolbar.
///
/// returns:
/// The header text (as a String) of the toolbar.
- (NSString * _Nonnull)getHeaderText SWIFT_WARN_UNUSED_RESULT;
/// Returns the button text of the toolbar.
///
/// returns:
/// The button text (as a String) of the toolbar.
- (NSString * _Nonnull)getButtonText SWIFT_WARN_UNUSED_RESULT;
- (id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)zone SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class NSData;

/// Holds parameters that are required to create AReq messages and to perform the Challenge Flow
SWIFT_PROTOCOL_NAMED("R3DS2Transaction")
@protocol R3DS2Transaction
/// Returns device and 3DS SDK information to the 3DS Requestor App.
///
/// throws:
/// SDKRuntime exception.
///
/// returns:
/// Returns an AuthenticationRequestParameters object that contains device information and 3DS SDK information.
- (R3DS2AuthenticationRequestParameters * _Nullable)getAuthenticationRequestParametersAndReturnError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
/// Initiates the challenge process.
/// \param challengeParameters ACS details required by the 3DS SDK to conduct the challenge
/// process during the transaction.
///
/// \param challengeStatusReceiver Callback object for notifying the 3DS Requestor App about the
/// challenge status.
///
/// \param timeOut Timeout interval (in minutes) within which the challenge process must be
/// completed. The minimum timeout interval shall be 5 minutes.
///
///
/// throws:
/// Invalid input exception.
- (BOOL)doChallengeWithChallengeParameters:(R3DS2ChallengeParameters * _Nonnull)challengeParameters challengeStatusReceiver:(id <R3DS2ChallengeStatusReceiver> _Nonnull)challengeStatusReceiver timeOut:(NSInteger)timeOut challengeView:(id <R3DS2ChallengeView> _Nonnull)challengeView error:(NSError * _Nullable * _Nullable)error;
/// Returns an instance of Progress View (processing screen) that the 3DS Requestor App uses.
///
/// returns:
/// Returns a ProgressDialog object.
- (id <R3DS2ProgressDialog> _Nullable)getProgressViewAndReturnError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
/// Cleans up resources that are held by the Transaction object.
- (BOOL)closeAndReturnError:(NSError * _Nullable * _Nullable)error;
- (BOOL)presentChallengeData:(NSData * _Nonnull)data challengeStatusReceiver:(id <R3DS2ChallengeStatusReceiver> _Nonnull)challengeStatusReceiver timeOut:(NSInteger)timeOut challengeView:(id <R3DS2ChallengeView> _Nonnull)challengeView error:(NSError * _Nullable * _Nullable)error;
@end


/// Provides the functionality required for 3DS SDK UI customization.
SWIFT_CLASS_NAMED("R3DS2UiCustomization")
@interface R3DS2UiCustomization : NSObject <NSCopying>
/// Sets the attributes of a ButtonCustomization object for a particular button type.
/// \param buttonCustomization A ButtonCustomization object.
///
/// \param buttonType The ButtonType.
///
- (BOOL)setButtonCustomizationWithButtonCustomization:(R3DS2ButtonCustomization * _Nonnull)buttonCustomization buttonType:(enum R3DS2ButtonType)buttonType error:(NSError * _Nullable * _Nullable)error;
/// Sets the attributes of a ButtonCustomization object for an implementer-specific button type.
/// \param buttonCustomization A ButtonCustomization object.
///
/// \param btnType Implementer-specific button type.
///
- (BOOL)setButtonCustomizationWithButtonCustomization:(R3DS2ButtonCustomization * _Nonnull)buttonCustomization btnType:(NSString * _Nonnull)btnType error:(NSError * _Nullable * _Nullable)error;
/// Sets the attributes of a ToolbarCustomization object.
/// \param toolbarCustomization A ToolbarCustomization object.
///
- (void)setToolbarCustomizationWithToolbarCustomization:(R3DS2ToolbarCustomization * _Nonnull)toolbarCustomization;
/// Sets the attributes of a LabelCustomization object.
/// \param labelCustomization A LabelCustomization object.
///
- (void)setLabelCustomizationWithLabelCustomization:(R3DS2LabelCustomization * _Nonnull)labelCustomization;
/// Sets the attributes of a TextBoxCustomization object.
/// \param textBoxCustomization A TextBoxCustomization object.
///
- (void)setTextBoxCustomizationWithTextBoxCustomization:(R3DS2TextBoxCustomization * _Nonnull)textBoxCustomization;
/// Returns a ButtonCustomization object.
/// \param buttonType A pre-defined list of button types.
///
///
/// returns:
/// returns A Button Customization object.
- (R3DS2ButtonCustomization * _Nullable)getButtonCustomizationWithButtonType:(enum R3DS2ButtonType)buttonType SWIFT_WARN_UNUSED_RESULT;
/// Returns a ButtonCustomization object for an implementer-specific button type.
/// \param btnType Implementer-specific button type.
///
///
/// returns:
/// A ButtonCustomization object.
- (R3DS2ButtonCustomization * _Nullable)getButtonCustomizationWithBtnType:(NSString * _Nonnull)btnType SWIFT_WARN_UNUSED_RESULT;
/// Returns a ToolbarCustomization object.
///
/// returns:
/// A ToolbarCustomization object.
- (R3DS2ToolbarCustomization * _Nullable)getToolbarCustomization SWIFT_WARN_UNUSED_RESULT;
/// Returns a LabelCustomization object.
///
/// returns:
/// A LabelCustomization object.
- (R3DS2LabelCustomization * _Nullable)getLabelCustomization SWIFT_WARN_UNUSED_RESULT;
/// Returns a TextBoxCustomization object.
///
/// returns:
/// A TextBoxCustomization object.
- (R3DS2TextBoxCustomization * _Nullable)getTextboxCustomization SWIFT_WARN_UNUSED_RESULT;
/// Method creating a deep copy of the given object.
/// \param zone Nil
///
///
/// returns:
/// Deep copy of the given object.
- (id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)zone SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// Warning represents a warning that is produced by the 3DS SDK while performing security checks during initialization.
SWIFT_CLASS_NAMED("R3DS2Warning")
@interface R3DS2Warning : NSObject
/// Constructs a Warning object.
/// \param warningId Warning ID
///
/// \param message Warning message
///
/// \param severity Warning severity level
///
- (nonnull instancetype)initWithWarningId:(NSString * _Nonnull)warningId message:(NSString * _Nonnull)message severity:(enum R3DS2Severity)severity OBJC_DESIGNATED_INITIALIZER;
/// Return the warning ID
///
/// returns:
/// The warning ID as a string.
- (NSString * _Nonnull)getID SWIFT_WARN_UNUSED_RESULT;
/// Returns the warning message.
///
/// returns:
/// The warning message as a string.
- (NSString * _Nonnull)getMessage SWIFT_WARN_UNUSED_RESULT;
/// Return the severity level of the warning produced by the 3DS SDK.
///
/// returns:
/// The severity level of the warning as a Severity enum type.
- (enum R3DS2Severity)getSeverity SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


SWIFT_PROTOCOL("_TtP10Ravelin3DS20SDKChallengeProtocol_")
@protocol SDKChallengeProtocol
- (void)handleChallenge;
@end


SWIFT_PROTOCOL("_TtP10Ravelin3DS31SingleSelectorChallengeProtocol_")
@protocol SingleSelectorChallengeProtocol <GenericChallengeProtocol>
- (void)selectObject:(NSInteger)index;
@end


SWIFT_PROTOCOL("_TtP10Ravelin3DS21TextChallengeProtocol_")
@protocol TextChallengeProtocol <GenericChallengeProtocol>
- (void)typeTextChallengeValue:(NSString * _Nonnull)value;
@end


















@class WKWebView;

SWIFT_PROTOCOL("_TtP10Ravelin3DS20WebChallengeProtocol_")
@protocol WebChallengeProtocol <GenericChallengeProtocol>
- (WKWebView * _Nonnull)getWebView SWIFT_WARN_UNUSED_RESULT;
@end

#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif

#endif
